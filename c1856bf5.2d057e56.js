(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{281:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return c})),t.d(n,"metadata",(function(){return b})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return p}));var r=t(3),i=t(7),a=(t(0),t(356)),l=["components"],c={},b={unversionedId:"\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/06-\u9012\u5f52&\u56de\u6eaf&\u5206\u6cbb",id:"\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/06-\u9012\u5f52&\u56de\u6eaf&\u5206\u6cbb",isDocsHomePage:!1,title:"06-\u9012\u5f52&\u56de\u6eaf&\u5206\u6cbb",description:"\u7b2c\u516b\u7ae0\uff1a\u9012\u5f52\u3001\u5206\u6cbb\u548c\u56de\u6eaf",source:"@site/docs/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/06-\u9012\u5f52&\u56de\u6eaf&\u5206\u6cbb.md",slug:"/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/06-\u9012\u5f52&\u56de\u6eaf&\u5206\u6cbb",permalink:"/docs/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/06-\u9012\u5f52&\u56de\u6eaf&\u5206\u6cbb",editUrl:"dys-typora-open://mine/survival/docs/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/06-\u9012\u5f52&\u56de\u6eaf&\u5206\u6cbb.md",version:"current"},s=[{value:"\u7b2c\u516b\u7ae0\uff1a\u9012\u5f52\u3001\u5206\u6cbb\u548c\u56de\u6eaf",id:"\u7b2c\u516b\u7ae0\uff1a\u9012\u5f52\u3001\u5206\u6cbb\u548c\u56de\u6eaf",children:[]},{value:"\u9ad8\u9891\u7edf\u8ba1",id:"\u9ad8\u9891\u7edf\u8ba1",children:[{value:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",id:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22",children:[]},{value:"\u5206\u6cbb",id:"\u5206\u6cbb",children:[]},{value:"\u56de\u6eaf",id:"\u56de\u6eaf",children:[]},{value:"8-1 \u6811\u5f62\u95ee\u9898",id:"8-1-\u6811\u5f62\u95ee\u9898",children:[]},{value:"8-2 \u4ec0\u4e48\u662f\u56de\u6eaf",id:"8-2-\u4ec0\u4e48\u662f\u56de\u6eaf",children:[]},{value:"8-3 \u6392\u5217\u95ee\u9898",id:"8-3-\u6392\u5217\u95ee\u9898",children:[]},{value:"8-4 \u7ec4\u5408\u95ee\u9898",id:"8-4-\u7ec4\u5408\u95ee\u9898",children:[]},{value:"8-5 \u56de\u6eaf\u6cd5\u89e3\u51b3\u7ec4\u5408\u95ee\u9898\u7684\u4f18\u5316",id:"8-5-\u56de\u6eaf\u6cd5\u89e3\u51b3\u7ec4\u5408\u95ee\u9898\u7684\u4f18\u5316",children:[]},{value:"8-6 \u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u56de\u6eaf\u6cd5 Word Search",id:"8-6-\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u56de\u6eaf\u6cd5-word-search",children:[]},{value:"8-7 floodfill\u7b97\u6cd5\uff0c\u4e00\u7c7b\u7ecf\u5178\u95ee\u9898",id:"8-7-floodfill\u7b97\u6cd5\uff0c\u4e00\u7c7b\u7ecf\u5178\u95ee\u9898",children:[]},{value:"8-8 \u56de\u6eaf\u6cd5\u662f\u4eba\u5de5\u667a\u80fd\u7684\u57fa\u7840",id:"8-8-\u56de\u6eaf\u6cd5\u662f\u4eba\u5de5\u667a\u80fd\u7684\u57fa\u7840",children:[]},{value:"\u8865\u5145\u4ee3\u78011\uff1a\u66f4\u591a\u548c\u751f\u6210\u6392\u5217\u76f8\u5173\t\u6574\u7406\u4e2d",id:"\u8865\u5145\u4ee3\u78011\uff1a\u66f4\u591a\u548c\u751f\u6210\u6392\u5217\u76f8\u5173-\u6574\u7406\u4e2d",children:[]}]},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",children:[]}],o={toc:s};function p(e){var n=e.components,t=Object(i.a)(e,l);return Object(a.b)("wrapper",Object(r.a)({},o,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"\u7b2c\u516b\u7ae0\uff1a\u9012\u5f52\u3001\u5206\u6cbb\u548c\u56de\u6eaf"},"\u7b2c\u516b\u7ae0\uff1a\u9012\u5f52\u3001\u5206\u6cbb\u548c\u56de\u6eaf"),Object(a.b)("p",null,"\u526a\u679d\uff1a"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"\u5faa\u73af\u4f53\u5185\u90e8\u903b\u8f91\u5904\u7406\uff0c\u4e0d\u7b26\u5408\u8981\u6c42\u51cf\u6389\uff08\u6392\u5217\u95ee\u9898\uff0c\u590d\u539fIP\u95ee\u9898\uff09"),Object(a.b)("li",{parentName:"ol"},"\u5faa\u73af\u672c\u8eab\uff0c\u968f\u7740\u8fed\u4ee3\u51cf\u5c11\uff08\u7ec4\u5408\u95ee\u9898\uff09")),Object(a.b)("p",null,"\u5feb\u901f\u6392\u5e8f\u548c\u5806\u6392\u5e8f\u5c31\u662f\u5178\u578b\u7684\u5206\u6cbb\u7684\u601d\u60f3\u3002"),Object(a.b)("h2",{id:"\u9ad8\u9891\u7edf\u8ba1"},"\u9ad8\u9891\u7edf\u8ba1"),Object(a.b)("h3",{id:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/number-of-islands"},"200. \u5c9b\u5c7f\u6570\u91cf")," - 115 "),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u4e8c\u7ef4\u5e73\u9762dfs\uff1a\u53cc\u91cdfor\u5faa\u73af"),Object(a.b)("li",{parentName:"ul"},"\u8bb0\u5f55\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"visited[i][j]"),"\uff08\u56e0\u4e3a\u6709\u73af\uff09"),Object(a.b)("li",{parentName:"ul"},"\u8fb9\u754c\u5224\u65ad\uff1a",Object(a.b)("inlineCode",{parentName:"li"},"bool inArea(int x,int y)")),Object(a.b)("li",{parentName:"ul"},"\u641c\u7d22\u65b9\u5411\uff1a\u56db\u8054\u901a\u5206\u91cf",Object(a.b)("inlineCode",{parentName:"li"},"int d[4][2] = {{-1,0},{0,1},{1,0},{0,-1}};")),Object(a.b)("li",{parentName:"ul"},"\u9012\u5f52\u7684\u7ed3\u675f\u6761\u4ef6\uff1a\u5faa\u73af\u7684\u7ed3\u675f")),Object(a.b)("hr",null),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u5206\u6cbb\uff1a\u4e0d\u9700\u8981\u5206\u6cbb\uff0c\u6ca1\u6709\u5b50\u95ee\u9898\u3002"),Object(a.b)("li",{parentName:"ul"},"\u526a\u679d\uff1a\u6839\u636e\u6761\u4ef6\u5224\u65ad\u662f\u4e0d\u662f\u8981\u8bbf\u95ee\u3002"),Object(a.b)("li",{parentName:"ul"},"\u56de\u6eaf\uff1a\u4e0d\u9700\u8981\u8fd4\u56de\u4fe1\u606f\uff0c\u5904\u7406\u7684\u4fe1\u606f\u7ed9\u4e86\u5168\u5c40\u53d8\u91cf\u3002\uff08\u9700\u8981\u8fd4\u56de\u4fe1\u606f\u7684\u5f80\u5f80\u662f\u548c\u5206\u6cbb\u76f8\u5173\u7684\u5185\u5bb9\uff09")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-tree-right-side-view"},"199. \u4e8c\u53c9\u6811\u7684\u53f3\u89c6\u56fe")," - 87"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u4e0d\u7528\u8bb0\u5f55\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9\uff0c\u56e0\u4e3a\u6ca1\u6709\u73af\u3002")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u641c\u7d22\u65b9\u5411\uff1a2\u4e2a\u65b9\u5411 \u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u9012\u5f52\u7684\u7ed3\u675f\u6761\u4ef6\uff1a\u5230\u8fbe\u53f6\u5b50\u8282\u70b9")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u9012\u5f52\uff1a\u643a\u5e26\u4e2d\u95f4\u503c\uff08\u5c42\u7ea7\uff09\u7ed9\u4e0b\u4e00\u5c42\u3002"))),Object(a.b)("hr",null),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u5206\u6cbb\uff1a\u6ca1\u6709\u5b50\u95ee\u9898"),Object(a.b)("li",{parentName:"ul"},"\u526a\u679d\uff1a\u4e0d\u9700\u8981\u526a\u679d\uff0c\u6240\u6709\u7684\u8def\u5f84\u90fd\u8981\u8d70\u4e00\u904d\u3002"),Object(a.b)("li",{parentName:"ul"},"\u56de\u6eaf\uff1a\u4e0d\u9700\u8981\u8fd4\u56de\u4fe1\u606f\uff0c\u5904\u7406\u7684\u4fe1\u606f\u7ed9\u4e86\u5168\u5c40\u53d8\u91cf\u3002\uff08\u9700\u8981\u8fd4\u56de\u4fe1\u606f\u7684\u5f80\u5f80\u662f\u548c\u5206\u6cbb\u76f8\u5173\u7684\u5185\u5bb9\uff09")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-tree-maximum-path-sum"}," 124. \u4e8c\u53c9\u6811\u4e2d\u7684\u6700\u5927\u8def\u5f84\u548c")," - 76"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u6bcf\u4e00\u5c42\u67096\u4e2a\u5f85\u9009\u7ed3\u679c\u3002"),Object(a.b)("li",{parentName:"ul"},"\u56de\u6eaf\uff1a\u67093\u4e2a\u9700\u8981\u9009\u62e9\u6700\u4f18\u89e3\uff0c\u53c2\u4e0e\u56de\u6eaf\u3002"),Object(a.b)("li",{parentName:"ul"},"\u4e0d\u56de\u6eaf\uff1a\u67093\u4e2a\u9700\u8981\u9009\u62e9\u6700\u4f18\u89e3\uff0c\u4e0d\u53c2\u4e0e\u56de\u6eaf\uff0c\u5168\u5c40\u5224\u65ad\u9009\u62e9\u3002")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/"},"105. \u4ece\u524d\u5e8f\u4e0e\u4e2d\u5e8f\u904d\u5386\u5e8f\u5217\u6784\u9020\u4e8c\u53c9\u6811"),"- 63"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u5bf9\u8c61\u662f1\u7ef4\u6570\u7ec4\u3002")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u524d\u5e8f\u904d\u5386\u7b2c\u4e00\u4e2a\u662f\u6839\uff0c\u8fd9\u4e2a\u6839\u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u7684\u7d22\u5f15\u5c06\u4e2d\u5e8f\u904d\u5386\u4e00\u4efd\u4e3a2\uff0c\u53ef\u4ee5\u5f97\u5230\u4e2d\u5e8f\u904d\u5386\u7684\u5de6\u53f3\u5b50\u6811\u7684\u5c3a\u5bf8")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},Object(a.b)("inlineCode",{parentName:"p"},"    TreeNode* buildTree(vector<int>& preorder,int preorder_left, int preorder_right,vector<int>& inorder,int inorder_left, int inorder_right)"),"\u9012\u5f52\u4e0b\u53bb")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u9012\u5f52\u9700\u8981\u786e\u5b9a\u6839\u8282\u70b9\u548c\u5de6\u53f3\u5b50\u6811\u7684\u7a97\u53e3\u3002")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u9012\u5f52\u7684\u7ed3\u675f\u6761\u4ef6\u662f\u7a97\u53e3\u5c0f\u4e8e0\u3002")),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u3002\u6700\u9876\u5c42\u5c31\u662f\u6211\u4eec\u8981\u7684\u6811\u3002"))),Object(a.b)("hr",null),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u5206\u6cbb\uff1a\u6bcf\u6b21\u5206\u4e3a\u5de6\u5b50\u6811\u5e8f\u5217\u548c\u53f3\u5b50\u6811\u5e8f\u5217"),Object(a.b)("li",{parentName:"ul"},"\u56de\u6eaf\uff1a\u8fd4\u56de\u7ed3\u679c\u4f5c\u4e3a\u4e0a\u5c42\u7684\u6811\u7684\u5de6\u8282\u70b9\u6216\u8005\u53f3\u8282\u70b9\u3002")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree"},"104. \u4e8c\u53c9\u6811\u7684\u6700\u5927\u6df1\u5ea6"),"-63"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u9012\u5f52\u7ed3\u675f\u6761\u4ef6\uff1a ",Object(a.b)("inlineCode",{parentName:"li"},"if (root == nullptr) return 0;"))),Object(a.b)("hr",null),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u5206\u6cbb\uff1a\u5206\u522b\u7b97\u51fa\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u6df1\u5ea6"),Object(a.b)("li",{parentName:"ul"},"\u56de\u6eaf\uff1a\u5f53\u524d\u8282\u70b9\u7684\u9ad8\u5ea6=max(\u5de6\u5b50\u6811,\u53f3\u5b50\u6811)+1")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/balanced-binary-tree"},"110. \u5e73\u8861\u4e8c\u53c9\u6811"),"-60"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u9012\u5f52\u7ed3\u675f\uff1a\u5230\u4e86\u53f6\u5b50\u8282\u70b9 \u8fd4\u56de1"),Object(a.b)("li",{parentName:"ul"},"\u8fd4\u56de\u5f53\u524d\u8282\u70b9\u7684\u9ad8\u5ea6\u3002")),Object(a.b)("hr",null),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u5206\u6cbb\uff1a\u5206\u522b\u7b97\u51fa\u5de6\u5b50\u6811\u548c\u53f3\u5b50\u6811\u7684\u6df1\u5ea6"),Object(a.b)("li",{parentName:"ul"},"\u56de\u6eaf\uff1a\u4ee5\u5f53\u524d\u8282\u70b9\u4e3a\u6839\u7684\u6811\u662f\u5426\u6ee1\u8db3\u5e73\u8861\u4e8c\u53c9\u6811\u7684\u6027\u8d28\u3002\u7ed3\u679c\u4fdd\u5b58\u5728\u5168\u5c40\u5bf9\u8c61\u4e2d\u3002")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/sum-root-to-leaf-numbers"},"129. \u6c42\u6839\u5230\u53f6\u5b50\u8282\u70b9\u6570\u5b57")," - 60"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u9012\u5f52\u7ed3\u675f\u6761\u4ef6"),Object(a.b)("p",{parentName:"li"},"\u5230\u4e86\u53f6\u5b50\u8282\u70b9\uff1a",Object(a.b)("inlineCode",{parentName:"p"},"root.left == null && root.right == null")," \u8fd4\u56de",Object(a.b)("inlineCode",{parentName:"p"},"prevSum * 10 + root.val"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u5f53\u524d\u5c42\u7684\u503c\uff1a",Object(a.b)("inlineCode",{parentName:"p"},"prevSum * 10 + root.val"))),Object(a.b)("li",{parentName:"ul"},Object(a.b)("p",{parentName:"li"},"\u4e00\u4e2a\u601d\u60f3\u662f\uff1a\u643a\u5e26\u4e2d\u95f4\u503c\uff08\u4e2d\u95f4\u8ba1\u7b97\u7ed3\u679c\uff09\u7ed9\u4e0b\u4e00\u5c42\u3002"))),Object(a.b)("hr",null),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"\u5206\u6cbb\uff1a\u5de6\u5b50\u6811\u7684\u503c/\u53f3\u5b50\u6811\u7684\u503c"),Object(a.b)("li",{parentName:"ul"},"\u56de\u6eaf\uff1a\u5f53\u524d\u8282\u70b9\u7684\u503c=\u662f\u5de6\u5b50\u6811\u7684\u503c+\u53f3\u5b50\u6811\u7684\u503c\u3002")),Object(a.b)("p",null,"\u603b\u7ed3\u4e00\u4e0b\uff1a\u6811\u592a\u9002\u5408\u5206\u6cbb\u56de\u6eaf\u4e86\u3002\u672c\u9898\u662f\u8ba1\u7b97\u4ece\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u751f\u6210\u7684 ",Object(a.b)("strong",{parentName:"p"},"\u6240\u6709\u6570\u5b57\u4e4b\u548c")," \u3002",Object(a.b)("strong",{parentName:"p"},"\u8fd9\u4e2a\u95ee\u9898\u53ef\u4ee5\u5206\u89e3\u4e3a\u4e24\u4e2a\u76f8\u540c\u7684\u5b50\u95ee\u9898"),"\uff0c\u5373\u8ba1\u7b97\u4ee5\u5de6\u5b50\u6811\u4e3a\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u751f\u6210\u7684 ",Object(a.b)("strong",{parentName:"p"},"\u6240\u6709\u6570\u5b57\u4e4b\u548c")," \u548c\u4ee5\u53f3\u5b50\u6811\u4e3a\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u751f\u6210\u7684 ",Object(a.b)("strong",{parentName:"p"},"\u6240\u6709\u6570\u5b57\u4e4b\u548c"),"\u3002\u95ee\u9898\u7684\u8fb9\u754c\u5c31\u662f\uff1a\u8fd9\u4e2a\u6811\u662f\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\u548c\u8fd9\u9897\u6811\u662f\u4e00\u4e2a\u7a7a\u8282\u70b9\u3002"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    int dfs(TreeNode *root, int preSum) {\n        if(root == nullptr) {\n            return 0;\n        }\n\n        //\u5904\u7406\u5f53\u524d\u5c42\u903b\u8f91\n        int sum = preSum * 10 + root->val;\n        if(root->left == nullptr && root->right == nullptr) {   //\u5904\u7406\u53f6\u5b50\u8282\u70b9\u7684\u5f53\u524d\u5c42\u903b\u8f91\n            //\u5982\u679c\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\uff0c\u9012\u5f52\u7ed3\u675f\uff0c\u5c06\u6570\u636e\u5f80\u4e0a\u9001\n            return sum;\n        }\n\n        //\u975e\u53f6\u5b50\u8282\u70b9\n        //\u5206\u89e3\u6210\u4e24\u4e2a\u50cf\u76f8\u540c\u7684\u5b50\u95ee\u9898\uff1a\u6240\u6709\u6570\u5b57\u4e4b\u548c = \u5de6\u5b50\u6811\u7684\u6240\u6709\u6570\u5b57\u4e4b\u548c + \u53f3\u5b50\u6811\u7684\u6240\u6709\u6570\u5b57\u4e4b\u548c(\u5206\u6cbb\u56de\u6eaf)\n\n        //\u5b50\u95ee\u98981:\u4ee5\u5de6\u5b50\u6811\u4e3a\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u751f\u6210\u7684 **\u6240\u6709\u6570\u5b57\u4e4b\u548c**\n        int leftSum = dfs(root->left, sum);\n        //\u5b50\u95ee\u98982:\u4ee5\u53f3\u5b50\u6811\u4e3a\u6839\u8282\u70b9\u5230\u53f6\u8282\u70b9\u751f\u6210\u7684 **\u6240\u6709\u6570\u5b57\u4e4b\u548c**\n        int rightSum = dfs(root->right, sum);\n\n        //\u56de\u6eaf\n        return leftSum + rightSum;\n\n        // return dfs(root->left, sum) + dfs(root->right, sum);\n    }    \npublic:\n    int sumNumbers(TreeNode* root) {\n        return dfs(root,0);\n    }\n};\n")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/path-sum-ii"},"113. \u8def\u5f84\u603b\u548c II")," - 59"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/validate-binary-search-tree"},"98. \u9a8c\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811")," - 54"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/path-sum"},"112. \u8def\u5f84\u603b\u548c")," - 51"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/symmetric-tree"},"101. \u5bf9\u79f0\u4e8c\u53c9\u6811")," - 49"),Object(a.b)("h3",{id:"\u5206\u6cbb"},"\u5206\u6cbb"),Object(a.b)("p",null,"\u5206\u6210\u5b50\u95ee\u9898\u3002\u4e8c\u5206\u662f\u5176\u4e2d\u4e00\u79cd\u60c5\u51b5\u3002"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/kth-largest-element-in-an-array"},"215. \u6570\u7ec4\u4e2d\u7684\u7b2cK\u4e2a\u6700\u5927\u5143")," - 253"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/maximum-subarray"}," 53. \u6700\u5927\u5b50\u5e8f\u548c")," - 162"),Object(a.b)("ol",{start:2},Object(a.b)("li",{parentName:"ol"},"\u52a8\u6001\u89c4\u5212")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/merge-k-sorted-lists"},"23. \u5408\u5e76K\u4e2a\u6392\u5e8f\u94fe\u8868")," - 104"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/median-of-two-sorted-arrays"}," 4. \u5bfb\u627e\u4e24\u4e2a\u6b63\u5e8f\u6570\u7ec4\u7684\u4e2d\u4f4d\u6570")," - 64"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/majority-element"},"169. \u591a\u6570\u5143\u7d20")," - 48"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/search-a-2d-matrix-ii"},"240. \u641c\u7d22\u4e8c\u7ef4\u77e9\u9635 II")," - 38"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/shu-zu-zhong-de-ni-xu-dui-lcof"},"\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f")," - 25"),Object(a.b)("p",null,"\u5f52\u5e76\u6392\u5e8f\u3002"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    int count = 0;\n    \nprivate:\n    void Merge(vector<int> &data, int l,int mid, int r){\n        vector<int> tmp(r-l+1);\n        //\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4[l, mid][mid+1, r]\n        int i = l, j = mid+1,k = 0;\n        while(i <= mid && j <= r) {\n            if(data[i] <= data[j]) {\n                tmp[k++] = data[i++];\n            }\n            else {\n                tmp[k++] = data[j++];\n                count += (mid - i + 1); //i\u6bd4j\u5927\uff0c\u90a3\u4e48i\u540e\u9762\u7684\u6570\u5e94\u8be5\u90fd\u6bd4j\u5c0f\uff08\u8fd9\u5c31\u662f\u9006\u5e8f\u5bf9\uff01\uff09\n                count %= 1000000007;//\u91cd\u8981\uff01 \u53d6\u6a21\u8981\u63d0\u524d\uff01\n            }\n        }\n        \n        while(i <= mid) tmp[k++] = data[i++];\n        while(j <= r) tmp[k++] = data[j++];\n        //\u5f80\u56de\u642c\u8fd9\u4e2a\u4e0d\u80fd\u5c11\n        for (int i = l; i <= r; i++) {\n            data[i] = tmp[i-l];\n        }\n    }\n    \n    void MergeSort(vector<int> &data, int l, int r) {        \n        if(l >= r) {\n            return;\n        }\n        //\u62c6\u5206\n        int mid = l + (r-l)/2;\n        MergeSort(data, l, mid);\n        MergeSort(data, mid+1, r); //\u6ce8\u610f\u8fd9\u4e2a\u7ec6\u8282\uff01\u662fmid+1\n        \n        //\u5408\u5e76\n        Merge(data, l, mid,r);\n    }\n    \npublic:\n    int InversePairs(vector<int> data) {\n        MergeSort(data, 0, data.size()-1);\n        return count % 1000000007;\n    }\n};\n")),Object(a.b)("p",null,"\u5f52\u5e76\u6392\u5e8f"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\n\nprivate:\n    void merge(vector<int>& nums, int l, int mid, int r) {\n        //\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4[l mid] [mid+1 r]\n        // vector<int> tmpArr(r-l+1);\n        vector<int> tmpArr;\n        int i1 = l, i2 = mid+1,k = 0;\n        while(i1 <= mid && i2 <= r) {\n            if(nums[i1] <= nums[i2]) {\n                tmpArr.push_back(nums[i1++]);\n                // tmpArr[k++] = nums[i1++];\n            }\n            else {\n                tmpArr.push_back(nums[i2++]);\n                // tmpArr[k++] = nums[i2++];\n            }\n        }\n        while(i1 <= mid) { tmpArr.push_back(nums[i1++]);}\n        while(i2 <= r) { tmpArr.push_back(nums[i2++]);}\n        // while(i1 <= mid) { tmpArr[k++] = nums[i1++];}\n        // while(i2 <= r) { tmpArr[k++] = nums[i2++];}\n\n        for(int i = l; i <= r; i++) {\n            nums[i] = tmpArr[i-l];\n        }\n    }\n    void mergeSort(vector<int>& nums, int l, int r) {\n        if(l >= r) {\n            return;\n        }\n        int mid = l + (r-l)/2;\n        mergeSort(nums,l,mid);\n        mergeSort(nums,mid+1,r);\n\n        merge(nums, l, mid, r);\n    }\n\npublic:\n    vector<int> sortArray(vector<int>& nums) {\n        mergeSort(nums, 0, nums.size()-1);\n        return nums;\n    }\n};\n")),Object(a.b)("h4",{id:"23-\u5408\u5e76k\u4e2a\u5347\u5e8f\u94fe\u8868"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/merge-k-sorted-lists/"},"23. \u5408\u5e76K\u4e2a\u5347\u5e8f\u94fe\u8868")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\n    ListNode * merge(ListNode *list1, ListNode *list2) {\n        if ((!list1) || (!list2)) return list1 ? list1 : list2;\n        ListNode *dummyHead = new ListNode(-1);\n        ListNode *curr = dummyHead;\n        while(list1 && list2) {\n            if(list1->val < list2->val) {\n                curr->next = list1;\n                list1 = list1->next;                \n            }\n            else {\n                curr->next = list2;\n                list2 = list2->next;\n            }\n            curr = curr->next;\n        }\n        if(list1) curr->next = list1;\n        if(list2) curr->next = list2;\n\n        return dummyHead->next;\n    }\n    ListNode* mergeKLists(vector<ListNode*>& lists, int l, int r) {\n        if(l == r) return lists[l];\n        if (l > r) return nullptr;  //\u6ce8\u610f\uff1a\u8fc7\u4e86\u5c31\u8fd4\u56denullptr\n        int mid = l + (r-l)/2;\n        ListNode* list1 = mergeKLists(lists,l,mid);\n        ListNode* list2 = mergeKLists(lists,mid+1,r);//\u91cd\u8981\uff01\u8ba9\u5de6\u8fb9\u8d8b\u5411\u5927\u65b9\u5411\n        return merge(list1, list2);\n    }\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        return mergeKLists(lists, 0, lists.size()-1);\n    }\n};\n")),Object(a.b)("h3",{id:"\u56de\u6eaf"},"\u56de\u6eaf"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/permutations"},"46. \u5168\u6392\u5217")," - 113"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/restore-ip-addresses"},"93. \u590d\u539fIP\u5730\u5740")," -61"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/subsets"},"78. \u5b50\u96c6")," - 53"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/generate-parentheses"},"22. \u62ec\u53f7\u751f\u6210")," - 52"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/combination-sum"},"39. \u7ec4\u5408\u603b\u548c")," - 42"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/word-search"},"79. \u5355\u8bcd\u641c\u7d22")," - 27"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"6.%20%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8.md"},"6. \u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868")),Object(a.b)("h3",{id:"8-1-\u6811\u5f62\u95ee\u9898"},"8-1 \u6811\u5f62\u95ee\u9898"),Object(a.b)("h4",{id:"17-\u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number/"},"17. \u7535\u8bdd\u53f7\u7801\u7684\u5b57\u6bcd\u7ec4\u5408")),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\u5b8c\u6210\u4e00\u6b21\u63d0\u4ea4"),Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u8fd8\u9700\u518d\u7ec3")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"digits\u662f\u6570\u5b57\u5b57\u7b26\u4e32\ns(digits) \u662fdigits\u6240\u80fd\u4ee3\u8868\u7684\u5b57\u6bcd\u5b57\u7b26\u4e32\n\ns(digits[0...n-1]) = letter(digits[0]) + s(digits[1...n-1])\n                                     = letter(digits[0]) + letter(digits[1]) + s(digits[2...n-1])\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n        //\u518d\u7ec3\uff1amap\u7684\u5199\u6cd5\n        const unordered_map<char, string> letterMap = {\n            {'2',\"abc\"},\n            {'3',\"def\"},\n            {'4',\"ghi\"},\n            {'5',\"jkl\"},\n            {'6',\"mno\"},\n            {'7',\"pqrs\"},\n            {'8',\"tuv\"},\n            {'9',\"wxyz\"},\n        };\n        vector<string> ret;\n        void dfs(string &digits, int index, const string &ans) {\n            if(index == digits.size()) {\n                ret.push_back(ans);\n                return;\n            }\n\n            string letter = letterMap.at(digits[index]);\n            for(int i = 0; i < letter.size(); i++) {\n                dfs(digits, index+1, ans+letter[i]);\n                //\u5f53\u524d\u5c42\u5e76\u672a\u6539\u53d8ans\u7684\u72b6\u6001\u6240\u4ee5\u4e0d\u9700\u8981\u6e05\u7406\u72b6\u6001\uff08\u8fdb\u5165\u4e0b\u5c42\u624d\u6539\u53d8\uff0c\u800c\u4e0d\u662f\u5728\u5f53\u524d\u5c42\u6539\u53d8\u7684\uff0c\u5f53\u524d\u5c42\u7684ans\u8fd8\u662f\u90a3\u6837\uff09\n            }\n\n        }\npublic:\n    vector<string> letterCombinations(string digits) {\n        //1.\u5f02\u5e38\u5224\u65ad\n        if(!digits.size()) {\n            return ret;\n        }\n        //2.\u5efa\u7acb\u6570\u5b57\u5b57\u7b26\u5230\u5b57\u6bcd\u5b57\u7b26\u7684map\n        string ans;\n        dfs(digits,0,ans);\n        return ret;\n    }\n};\n")),Object(a.b)("h4",{id:"93-\u590d\u539f-ip-\u5730\u5740-61"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/restore-ip-addresses/"},"93. \u590d\u539f IP \u5730\u5740"),"-61"),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\u5b8c\u6210\u4e00\u6b21\u63d0\u4ea4"),Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u8fd8\u9700\u518d\u7ec3")),Object(a.b)("p",null,"\u7406\u6e05\u53ef\u7528\u7684\u9009\u62e9\uff0c\u5728\u53ef\u7528\u7684\u9009\u62e9\u4e2d\u8fdb\u884c\u526a\u679d\u3002"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    vector<string> ret;\n    void dfs(const string &s, int index, vector<string> &ans){\n        //\u5f97\u5230\u4e86\u5408\u6cd5\u56db\u7247\u6bb5\uff0c\u5e76\u4e14\u5b57\u7b26\u8017\u5c3d\n        if(index == s.size() && ans.size() == 4) {\n            string t;\n            for(int i = 0; i < ans.size(); i++) {\n                t += ans[i];\n                if(i != ans.size()-1) {\n                    t += \".\";\n                }\n            }\n            ret.push_back(t);\n            return;\n        }\n\n        //\u9009\u62e9(\u6bcf\u4e00\u6b65\u53ef\u4ee5\u67093\u4e2d\u9009\u62e9)\n        for(int i = 1; i <= 3; i++) {\n            if(index + i -1 >= s.size()) return;\n            if(i != 1 && s[index] == '0') return;\n\n            string t = s.substr(index, i);\n            if(i == 3 && atoi(t.c_str()) > 255) return;\n\n            ans.push_back(t);\n            dfs(s, index+i,ans);\n            ans.pop_back();\n        }\n    }\n\npublic:\n    vector<string> restoreIpAddresses(string s) {\n\n        vector<string> ans; //\u5b58\u653e\u5408\u6cd5\u7684\u56db\u7247\u6bb5\uff0c\u4e00\u4e2a\u89e3\u7b54\n        dfs(s,0,ans);\n        return ret;\n    }\n};\n")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/palindrome-partitioning/"},"131. \u5206\u5272\u56de\u6587\u4e32")),Object(a.b)("h3",{id:"8-2-\u4ec0\u4e48\u662f\u56de\u6eaf"},"8-2 \u4ec0\u4e48\u662f\u56de\u6eaf"),Object(a.b)("h3",{id:"8-3-\u6392\u5217\u95ee\u9898"},"8-3 \u6392\u5217\u95ee\u9898"),Object(a.b)("p",null,"\u56de\u6eaf\u7684\u8fc7\u7a0b\u4e2d\u501f\u52a9\u4e00\u5b9a\u7684\u6570\u636e\u7ed3\u6784\u8fdb\u884c\u8f85\u52a9\uff0c\u53ef\u4ee5\u7528\u6765\u526a\u679d\u3002 "),Object(a.b)("h4",{id:"46-\u5168\u6392\u5217---113"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/permutations/"},"46. \u5168\u6392\u5217")," - 113"),Object(a.b)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u4e0d\u542b\u91cd\u590d\u6570\u5b57\u7684\u6570\u7ec4 nums \uff0c\u8fd4\u56de\u5176 \u6240\u6709\u53ef\u80fd\u7684\u5168\u6392\u5217 \u3002\u4f60\u53ef\u4ee5 \u6309\u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u7b54\u6848\u3002"),Object(a.b)("p",null,"\u793a\u4f8b 1\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [1,2,3]\n\u8f93\u51fa\uff1a[[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n")),Object(a.b)("p",null,"\u793a\u4f8b 2\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [0,1]\n\u8f93\u51fa\uff1a[[0,1],[1,0]]\n")),Object(a.b)("p",null,"\u793a\u4f8b 3\uff1a"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u8f93\u5165\uff1anums = [1]\n\u8f93\u51fa\uff1a[[1]]\n")),Object(a.b)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/permutations"},"https://leetcode-cn.com/problems/permutations"),"\n\u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002"),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\u5b8c\u6210\u4e00\u6b21\u63d0\u4ea4")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    vector<vector<int>> ret;\n    vector<bool> used;\n    void dfs(const vector<int>& nums, int index, vector<int>& ans) {\n        if(index == nums.size()){\n            ret.push_back(ans);\n            return;\n        }\n\n        for(int i = 0; i < nums.size(); i++) {\n            if(!used[i]) {\n                ans.push_back(nums[i]);\n                used[i] = true;\n                dfs(nums, index+1, ans);\n                used[i] = false;\n                ans.pop_back();\n            }\n        }\n    }\npublic:\n    vector<vector<int>> permute(vector<int>& nums) {\n        ret.clear();\n        if(nums.empty()) return ret;\n        used = vector<bool>(nums.size(), false);\n\n        vector<int> ans;\n        dfs(nums, 0, ans);\n        return ret;\n    }\n};\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def permute(self, nums):\n        """\n        :type nums: List[int]\n        :rtype: List[List[int]]\n        """\n        res = []\n        \n        #\u4ee5\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e3a\u8d77\u70b9\uff0c\u5f00\u59cb\u56de\u6eaf\u7b97\u6cd5\n        def count(start, num, subArray):\n            if num == 0:\n                res.append(subArray)                \n            for i in nums:\n                if i not in subArray:\n                    count(start, num-1, subArray + [i])\n                    \n        #\u5faa\u73af\u904d\u5386\u6bcf\u4e00\u4e2a\u5143\u7d20\n        n = len(nums)\n        for i in nums:            \n            count(i, n-1, [i])\n        \n        return res\n')),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/permutations-ii/"},"47. \u5168\u6392\u5217 II")),Object(a.b)("h4",{id:"\u5251\u6307-offer-38-\u5b57\u7b26\u4e32\u7684\u6392\u5217---7"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/zi-fu-chuan-de-pai-lie-lcof/"},"\u5251\u6307 Offer 38. \u5b57\u7b26\u4e32\u7684\u6392\u5217")," - 7"),Object(a.b)("h3",{id:"8-4-\u7ec4\u5408\u95ee\u9898"},"8-4 \u7ec4\u5408\u95ee\u9898"),Object(a.b)("p",null,"\u5b69\u5b50\u4e0d\u56fa\u5b9a\u3002\u5f80\u4e0b\u5206\u7684\u60c5\u51b5\u6570\u91cf\u4e0d\u56fa\u5b9a\u3002\u4e0b\u4e00\u8f6e\u7684start\u7684\u4f1a\u53d8\u5316\u3002"),Object(a.b)("h4",{id:"77-\u7ec4\u5408-9"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/combinations/"},"77. \u7ec4\u5408"),"-9"),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\u5b8c\u6210\u4e00\u6b21\u63d0\u4ea4")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    vector<vector<int>> ret;\n    void dfs(int n, int k, int start, vector<int> &ans) {\n        if(ans.size() == k) {\n            ret.push_back(ans);\n            return;\n        }\n\n        //\u5faa\u73af\u7684\u6b21\u6570\u53d1\u751f\u53d8\u5316\n        for(int i = start; i <= n-(c-ans.size())+1; i++) {\n        for(int i = start; i <= n; i++) {          \n            ans.push_back(i);\n            dfs(n,k,i+1,ans);\n            ans.pop_back();\n        }\n    }\npublic:\n    vector<vector<int>> combine(int n, int k) {\n        ret.clear();\n        if(n <= 0 || k <=0 || n < k) {\n            return ret;\n        }\n\n        int start = 1;\n        vector<int> ans;\n        dfs(n,k,start,ans);\n        return ret;\n    }\n};\n")),Object(a.b)("h4",{id:"39-\u7ec4\u5408\u603b\u548c---42"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/combination-sum/"},"39. \u7ec4\u5408\u603b\u548c")," - 42"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/combination-sum-ii/"},"40. \u7ec4\u5408\u603b\u548c II")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/combination-sum-iii/"},"216. \u7ec4\u5408\u603b\u548c III")),Object(a.b)("h4",{id:"78-\u5b50\u96c6-53"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/subsets/"},"78. \u5b50\u96c6"),"-53"),Object(a.b)("p",null,"\u7ed9\u5b9a\u4e00\u7ec4",Object(a.b)("strong",{parentName:"p"},"\u4e0d\u542b\u91cd\u590d\u5143\u7d20"),"\u7684\u6574\u6570\u6570\u7ec4 ",Object(a.b)("em",{parentName:"p"},"nums"),"\uff0c\u8fd4\u56de\u8be5\u6570\u7ec4\u6240\u6709\u53ef\u80fd\u7684\u5b50\u96c6\uff08\u5e42\u96c6\uff09\u3002"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u8bf4\u660e\uff1a"),"\u89e3\u96c6\u4e0d\u80fd\u5305\u542b\u91cd\u590d\u7684\u5b50\u96c6\u3002"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u793a\u4f8b:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u8f93\u5165: nums = [1,2,3]\n\u8f93\u51fa:\n[\n  [3],\n  [1],\n  [2],\n  [1,2,3],\n  [1,3],\n  [2,3],\n  [1,2],\n  []\n]\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def subsets(self, nums):\n        """\n        :type nums: List[int]\n        :rtype: List[List[int]]\n        """        \n        res = []\n        \n        """\n        \u56de\u6eaf\u7b97\u6cd5\uff1a\n        \n        \u9009\u62e9\uff1a\u4ece\u5f53\u524d\u5230\u7ed3\u5c3e\u7684\u6240\u6709\u5143\u7d20\n        \u7ea6\u675f\uff1a\u589e\u52a0\u7684\u5143\u7d20\u662f\u4ece\u5f53\u524d\u5143\u7d20\u5f80\u540e\u7684\u5143\u7d20\n        \u7ed3\u675f\uff1a\u6761\u4ef6\u662fstart == len(nums)\n        \n        \u4e0b\u4e00\u5c42\u7ed3\u675f\u540e\uff0c\u56de\u5230\u4e0a\u4e00\u5c42\u7ee7\u7eed\u63a2\u5bfbfor\u5faa\u73af\u7684\u4e0b\u4e00\u79cd\u60c5\u51b5\n        """\n        def count(start, num):  # \u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n            res.append(num)\n            for i in range(start, len(nums)):\n                count(i + 1, num + [nums[i]])#python\u7684\u6570\u7ec4\u62fc\u63a5\u76f4\u63a5\u7528\u52a0\u53f7\n                \n        count(0, [])\n        return res             \n')),Object(a.b)("hr",null),Object(a.b)("p",null,"\u9012\u5f52\u4e2d\uff1a\u5faa\u73af\u7684\u6b21\u6570\u4e0d\u662f\u56fa\u5b9a\u7684\u3002"),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/subsets-ii/"},"90. \u5b50\u96c6 II")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/binary-watch/"},"401. \u4e8c\u8fdb\u5236\u624b\u8868")),Object(a.b)("h4",{id:"22-\u62ec\u53f7\u751f\u6210-52"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/generate-parentheses/"},"22. \u62ec\u53f7\u751f\u6210"),"-52"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    results = []\n    def generateParenthesis(self, n):\n        """\n        :type n: int\n        :rtype: List[str]\n        """     \n        #\u6bcf\u6b21\u6267\u884c\u524d\uff0c\u6e05\u7a7a\u6570\u7ec4\uff0c\u9632\u6b62\u591a\u6b21\u6267\u884c\uff0c\u6570\u7ec4\u6c61\u67d3\n        self.results = []\n        result = \'\'        \n        self.parentheses(result, n, n)\n        return self.results\n    \n    """\n    \u9012\u5f52\u56de\u6eaf\u904d\u5386\n    1. \u9009\u62e9\u3002\u6bcf\u4e00\u6b65\u4e00\u5171\u6709\u51e0\u79cd\u9009\u62e9\u3002\u672c\u6848\u4f8b\u6709\u4e24\u79cd\u9009\u62e9 \u4e0b\u4e00\u6b65\u6dfb\u52a0"(" \u6216\u8005 \u4e0b\u4e00\u6b65\u6dfb\u52a0")"\n    2. \u6761\u4ef6\u3002\u6bcf\u4e00\u79cd\u9009\u62e9\u6709\u4ec0\u4e48\u7ea6\u675f\u3002\u5982\u679c\u4e0b\u4e00\u6b65\u6dfb\u52a0"(", \u5269\u4f59\u7684\u5de6\u62ec\u53f7\u6570\u5fc5\u987b\u5927\u4e8e0\u3002\u5982\u679c\u4e0b\u4e00\u6b65\u6dfb\u52a0")", \u5269\u4f59\u7684\u53f3\u62ec\u53f7\u6570\u5fc5\u987b\u5927\u4e8e\u5de6\u62ec\u53f7\u6570\u3002\n    3. \u7ed3\u675f\u3002\u7ed3\u675f\u6761\u4ef6\u662f\u4ec0\u4e48\u3002\u672c\u6848\u4f8b\u7684\u7ed3\u675f\u6761\u4ef6\u662f\u5de6\u62ec\u53f7\u548c\u53f3\u62ec\u53f7\u90fd\u6dfb\u52a0\u5b8c\u3002\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c\u3002\n    \n    \u9012\u5f52\u56de\u6eaf\uff1a\u591a\u4e8e\u4e00\u4e2a\u7684\u9012\u5f52\u624d\u80fd\u56de\u6eaf\u3002\u672c\u6848\u4f8b\u6709\u4e24\u79cd\u6761\u4ef6\u7684\u9012\u5f52\u3002\u6240\u4ee5\u5f53\u4ece\u67d0\u4e00\u79cd\u6761\u4ef6\u9012\u5f52\u8fd4\u56de\u65f6\uff0c\u53ef\u80fd\u4f1a\u89e6\u53d1\u4e0b\u4e00\u4e2a\u9012\u5f52\uff0c\u6b64\u65f6\u5c06\u672c\u5c42\u9012\u5f52\u7684\u72b6\u6001\u7ee7\u7eed\u4f20\u9012\u4e0b\u53bb\uff0c\u53bb\u63a2\u7d22\u4ece\u672c\u5c42\u72b6\u6001\u5f80\u540e\u7684\u5176\u4ed6\u53ef\u80fd\u6027\u3002\n    """    \n    def parentheses(self, result, leftNum , rightNum):\n        if leftNum == 0 and rightNum == 0:\n            self.results.append(result)\n        \n        if leftNum > 0:\n            self.parentheses(result+\'(\', leftNum -1, rightNum)\n        if rightNum > leftNum:\n            self.parentheses(result+\')\', leftNum, rightNum-1)\n')),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},'class Solution {\nprivate:\n    vector<string> ret;\npublic:\n    vector<string> generateParenthesis(int n) {\n        /*\n        \u5bfb\u627e\u91cd\u590d\u6027\uff0c\u5728\u91cd\u590d\u7684\u8fc7\u7a0b\u4e2d\u5904\u7406\u903b\u8f91\u3002\n        \u6ce8\u610f\u91cd\u590d\u7684\u5f00\u59cb\u6761\u4ef6\uff0c\u7ed3\u675f\u6761\u4ef6\uff0c\u548c\u91cd\u590d\u63a8\u8fdb\u903b\u8f91\uff08\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff09\u3002\n        \n        \u91cd\u590d\u7684\u5f00\u59cb\u6761\u4ef6\uff1a\n        1. \u9012\u5f52\uff0c\u9012\u5f52\u8c03\u7528\u7684\u65f6\u5019\u7528\u53c2\u6570\u4f20\u5165\n        2. \u5faa\u73af\uff0c\u5faa\u73af\u8fdb\u5165\u524d\uff0c\u8bbe\u7f6e\u597d\u5c40\u90e8\u53d8\u91cf\n\n        \u91cd\u590d\u7ed3\u675f\u6761\u4ef6\uff1a\n        1. \u9012\u5f52\uff0c\u5c42\u7ea7\u7684\u7ed3\u675f\uff0c\u786e\u5b9a\u597d\u6700\u5927\u5c42\uff0c\u5982\u679c\u662f\u9012\u51cf\uff0c\u5219\u76f8\u5bf9\u7b80\u5355\uff0c\u5927\u4e8e0\u662f\u7ed3\u675f\u6761\u4ef6\u3002\n        2. \u5faa\u73af\uff0c\u8bbe\u7f6e\u597d\u5faa\u73af\u7684\u7ed3\u675f\u6761\u4ef6\u3002\n\n        \u91cd\u590d\u63a8\u8fdb\u903b\u8f91\uff08\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff09\n        1. \u9012\u5f52\uff1a\u67d0\u4e9b\u6761\u4ef6\u4e0b\u653e\u5f03\u9012\u5f52\u3002\uff08\u4e0d\u8c03\u7528\u9012\u5f52\uff09\uff0c\u67d0\u4e9b\u6761\u4ef6\u4e0b\u8c03\u7528\u9012\u5f52\u3002\uff08\u8fd9\u53eb\u5206\u6cbb\u6216\u8005\u526a\u679d\uff09\n        2. \u5faa\u73af\uff1a\u597d\u50cf\u4e0d\u592a\u597d\u6574\uff0c\u5faa\u73af\u6761\u4ef6i++\u597d\u50cf\u5c11\u4e0d\u4e86\n        */\n        dfs(n,n,"");\n        return ret;\n    }\n\n    //\u5206\u6cbb+\u56de\u6eaf+\u526a\u679d\n    void dfs(int left, int right, string ans) {\n        //1. \u7ed3\u675f\u6761\u4ef6\n        if(left == 0 && right == 0) {\n            ret.push_back(ans);\n            return;\n        }\n        //2. \u5904\u7406\u903b\u8f91\n        //\u526a\u679d:\u5982\u679c\u5269\u4e0b\u7684\u5de6\u62ec\u53f7\u6bd4\u53f3\u62ec\u53f7\u8fd8\u591a\uff0c\u90a3\u5c31\u6ca1\u5f97\u73a9\u4e86\uff0c\u53ef\u4ee5\u526a\u679d\n        if (left == right) {\n            //\u5982\u679c\u76f8\u7b49\uff0c\u53ea\u80fd\u6dfb\u52a0\u5de6\u62ec\u53f7\n            dfs(left-1, right ,ans+"(");\n        }\n        else if (left < right) {\n            //\u5982\u679c\u5de6\u6bd4\u53f3\u5c11\uff08\u5de6\u5927\u4e8e0\u7684\u65f6\u5019\u53ef\u4ee5\u6dfb\u52a0\u5de6\u62ec\u53f7\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u53f3\u62ec\u53f7\uff09\uff08\u5de6\u7b49\u4e8e0\u7684\u65f6\u5019\u53ea\u80fd\u6dfb\u52a0\u53f3\u62ec\u53f7\uff09\n            if (left > 0) {\n                dfs(left-1, right ,ans+"(");\n            }\n            dfs(left, right-1 ,ans+")");\n        }\n    }\n};\n')),Object(a.b)("p",null,"\u52a8\u6001\u89c4\u5212"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},'/*\n()\n\n(())\n()()\n\n((()))\n(()())\n(())()\n()(())\n()()()\n\n\u6838\u5fc3\u7684\u601d\u60f3\u662f\uff0c\u8003\u8651 i=n \u65f6\u76f8\u6bd4 n-1 \u7ec4\u62ec\u53f7\u589e\u52a0\u7684\u90a3\u4e00\u7ec4\u62ec\u53f7\u7684\u4f4d\u7f6e\u3002\n\u6211\u4eec\u8003\u8651\u6574\u4e2a\u62ec\u53f7\u6392\u5217\u4e2d\u6700\u5de6\u8fb9\u7684\u62ec\u53f7\u3002\n\u5b83\u4e00\u5b9a\u662f\u4e00\u4e2a\u5de6\u62ec\u53f7\uff0c\u90a3\u4e48\u5b83\u53ef\u4ee5\u548c\u5b83\u5bf9\u5e94\u7684\u53f3\u62ec\u53f7\u7ec4\u6210\u4e00\u7ec4\u5b8c\u6574\u7684\u62ec\u53f7 "( )"\uff0c\u6211\u4eec\u8ba4\u4e3a\u8fd9\u4e00\u7ec4\u662f\u76f8\u6bd4 n-1 \u589e\u52a0\u8fdb\u6765\u7684\u62ec\u53f7\u3002\n\n\u4f5c\u8005\uff1ayuyu-13\n\u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/generate-parentheses/solution/zui-jian-dan-yi-dong-de-dong-tai-gui-hua-bu-lun-da/\n\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002\n*/\nclass Solution {\npublic:\n    vector<string> generateParenthesis(int n) {\n\n        if(n == 0) return {};\n        if(n == 1) return {"()"};\n\n        //\u7ec4\u6210\u62ec\u53f7\u7684\u72b6\u6001\u6570\u7ec4\n        vector<vector<string>> dp(n+1);\n\n        dp[0] = {""};\n        dp[1] = {"()"};\n\n        for(int i = 2; i <= n; i++) {\n            for(int j = 0; j < i; j++) {\n                for(string p : dp[j]) {\n                    for(string q : dp[i-j-1]) {\n                        string str = "(" + p + ")" + q;\n                        dp[i].push_back(str);\n                    }\n                }\n            }\n        }\n        return dp[n];\n\n    }\n};\n')),Object(a.b)("h3",{id:"8-5-\u56de\u6eaf\u6cd5\u89e3\u51b3\u7ec4\u5408\u95ee\u9898\u7684\u4f18\u5316"},"8-5 \u56de\u6eaf\u6cd5\u89e3\u51b3\u7ec4\u5408\u95ee\u9898\u7684\u4f18\u5316"),Object(a.b)("h3",{id:"8-6-\u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u56de\u6eaf\u6cd5-word-search"},"8-6 \u4e8c\u7ef4\u5e73\u9762\u4e0a\u7684\u56de\u6eaf\u6cd5 Word Search"),Object(a.b)("p",null,"\u4e8c\u7ef4\u5e73\u9762\t"),Object(a.b)("p",null,"\u56db\u8054\u901a\u5206\u91cf\u3002"),Object(a.b)("p",null,"\u8fb9\u754c\u68c0\u6d4b\u3002"),Object(a.b)("p",null,"\u8bb0\u5fc6\u5316\u8bbf\u95ee\u3002"),Object(a.b)("p",null,"\u56de\u6eaf\u72b6\u6001\u6e05\u7406\u3002"),Object(a.b)("h4",{id:"79-\u5355\u8bcd\u641c\u7d22-27"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/word-search/"},"79. \u5355\u8bcd\u641c\u7d22"),"-27"),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\u5b8c\u6210\u4e00\u6b21\u63d0\u4ea4"),Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u8fd8\u9700\u518d\u7ec3")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    int m,n;\n    int v[4][2] = {{-1,0},{0,1},{1,0},{0,-1}};\n    vector<vector<bool>> visited;\n    bool inArea(int x, int y){\n        return x >=0 && x < m && y >=0 && y < n;\n    }\n    bool dfs(vector<vector<char>>& board, string &word, int startX, int startY, int index) {\n        if(index == word.size()-1) {\n            return board[startX][startY] == word[index];\n        }\n        //\u5904\u7406\u5f53\u524d\u5c42\u903b\u8f91\n        if(board[startX][startY] == word[index]) {\n            visited[startX][startY] = true;//\u5f53\u524d\u6ee1\u8db3\u8981\u6c42\u53ef\u7528\u88ab\u6807\u8bb0\u4e3atrue\uff01\n            //\u904d\u53864\u4e2a\u65b9\u5411\n            for(int i=0; i < 4; i++) {\n                int newX = startX+v[i][0];\n                int newY = startY+v[i][1];\n                //\u904d\u5386\u4e4b\u524d\u5224\u65ad\u662f\u5426\u8bbf\u95ee\u8fc7\n                if(inArea(newX,newY) && !visited[newX][newY]) {\n                    if(dfs(board,word,newX,newY,index+1)) {\n                        return true;\n                    }\n                }\n            }\n            visited[startX][startY] = false;\n        }\n        return false;\n    }\n\npublic:\n    bool exist(vector<vector<char>>& board, string word) {\n        m = board.size();\n        assert(m > 0);\n        n = board[0].size();\n        visited = vector<vector<bool>>(m,vector<bool>(n,false));\n                //\u4e8c\u7ef4\u5e73\u9762\n        for(int i = 0; i < m; i++) {\n            for(int j = 0; j < n; j++) {                \n                if(dfs(board, word, i,j,0)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n};\n")),Object(a.b)("h4",{id:"\u5251\u6307-offer-29-\u987a\u65f6\u9488\u6253\u5370\u77e9\u9635---14"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/"},"\u5251\u6307 Offer 29. \u987a\u65f6\u9488\u6253\u5370\u77e9\u9635")," - 14"),Object(a.b)("h4",{id:"54-\u87ba\u65cb\u77e9\u9635"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/spiral-matrix/"},"54. \u87ba\u65cb\u77e9\u9635")),Object(a.b)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b ",Object(a.b)("em",{parentName:"p"},"m")," x ",Object(a.b)("em",{parentName:"p"},"n")," \u4e2a\u5143\u7d20\u7684\u77e9\u9635\uff08",Object(a.b)("em",{parentName:"p"},"m")," \u884c, ",Object(a.b)("em",{parentName:"p"},"n")," \u5217\uff09\uff0c\u8bf7\u6309\u7167\u987a\u65f6\u9488\u87ba\u65cb\u987a\u5e8f\uff0c\u8fd4\u56de\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u793a\u4f8b 1:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u8f93\u5165:[ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ]]\u8f93\u51fa: [1,2,3,6,9,8,7,4,5]\n")),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u793a\u4f8b 2:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u8f93\u5165:[  [1, 2, 3, 4],  [5, 6, 7, 8],  [9,10,11,12]]\u8f93\u51fa: [1,2,3,4,8,12,11,10,9,5,6,7]\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    vector<vector<bool>> visited;    \n    vector<int> ret;    \n    int m,n;\n    //\u6ce8\u610f\uff1ax\u548cy\uff0c\u8fd9\u4e2a\u548c\u6570\u5b66\u5750\u6807\u6709\u533a\u522b\n    int d[4][2] = {{0,1},{1,0},{0,-1},{-1,0}};\n    bool isValid(int x, int y) {\n        return x >= 0 && x < m && y >=0 && y < n;\n    }\n    //\u6ce8\u610f\uff1a\u65b9\u5411\u63a7\u5236dir\n    void dfs(int x, int y, vector<vector<int>>& matrix, int dir) {\n        ret.push_back(matrix[x][y]);\n        visited[x][y] = true;\n        for(int i = 0; i < 4; i++) {\n            int to_dir = (i+dir)%4;\n            int newx = x+d[to_dir][0];\n            int newy = y+d[to_dir][1];\n            if(isValid(newx,newy) && !visited[newx][newy]) {\n                dfs(newx,newy,matrix,to_dir);\n            }\n        }\n    }\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        m = matrix.size();\n        if(m == 0) return ret;\n        n = matrix[0].size();\n        visited = vector<vector<bool>>(m,vector<bool>(n,false));\n        dfs(0,0,matrix,0);\n        return ret;\n    }\n};\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def spiralOrder(self, matrix):\n        """\n        :type matrix: List[List[int]]\n        :rtype: List[int]\n        """\n        if len(matrix) == 0:\n            return []\n        \n        #\u5efa\u7acb\u56f4\u5899\n        hl, hr, vt, vb = -1, len(matrix[0]), -1, len(matrix)\n        \n        #\u65cb\u8f6c\u89c4\u5219-\u987a\u65f6\u9488\uff0c\u78b0\u5230\u56f4\u5899\u5411\u4e0b\u4e00\u4e2a\u65b9\u5411\u8d70\n        i, j = 0, 0\n        #\u65b9\u5411\u6807\n        k = 1\n        \n        array = [] \n        m = 0\n        total = len(matrix) * len(matrix[0])\n        \n        while m < total:\n            if matrix[i][j] != \'\':\n                array.append(matrix[i][j])\n                m += 1\n                matrix[i][j] = \'\'\n            #\u8f6c\u5411\u5224\u65ad\n            #\u6c34\u5e73\u4e0a\n            if k == 1:\n                if j < hr - 1:\n                    j += 1\n                if j == hr -1:\n                    vt += 1\n                    k = 2\n                    continue\n            #\u5782\u76f4\u53f3\n            if k == 2:\n                if i < vb - 1:\n                    i += 1\n                if i == vb -1:\n                    hr -= 1\n                    k = 3\n                    continue\n            #\u6c34\u5e73\u4e0b\n            if k == 3:\n                if j > hl + 1:\n                    j -= 1\n                if j == hl +1:\n                    vb -= 1\n                    k = 4\n                    continue\n            #\u5782\u76f4\u5de6\n            if k== 4:\n                if i > vt + 1 :\n                    i -= 1\n                if i == vt + 1:\n                    hl += 1                \n                    k = 1\n                    continue\n        return array\n')),Object(a.b)("h4",{id:"59-\u87ba\u65cb\u77e9\u9635-ii"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/spiral-matrix-ii/"},"59. \u87ba\u65cb\u77e9\u9635 II")),Object(a.b)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570 ",Object(a.b)("em",{parentName:"p"},"n"),"\uff0c\u751f\u6210\u4e00\u4e2a\u5305\u542b 1 \u5230 ",Object(a.b)("em",{parentName:"p"},"n"),"2 \u6240\u6709\u5143\u7d20\uff0c\u4e14\u5143\u7d20\u6309\u987a\u65f6\u9488\u987a\u5e8f\u87ba\u65cb\u6392\u5217\u7684\u6b63\u65b9\u5f62\u77e9\u9635\u3002"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"\u793a\u4f8b:")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"\u8f93\u5165: 3\n\u8f93\u51fa:\n[\n [ 1, 2, 3 ],\n [ 8, 9, 4 ],\n [ 7, 6, 5 ]\n]\n")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def generateMatrix(self, n):\n        """\n        :type n: int\n        :rtype: List[List[int]]\n        """\n        # ln = n ** 0.5\n        \n        \n        if n == 0:\n            return []\n        \n        #\u5efa\u7acb\u56f4\u5899\n        hl, hr, vt, vb = -1, n, -1, n\n        \n        #\u65cb\u8f6c\u89c4\u5219-\u987a\u65f6\u9488\uff0c\u78b0\u5230\u56f4\u5899\u5411\u4e0b\u4e00\u4e2a\u65b9\u5411\u8d70\n        i, j = 0, 0\n        #\u65b9\u5411\u6807\n        k = 1\n        \n        array = [[0 for col in range(n)] for row in range(n)]\n        m = 0\n        f = 1\n        while m < n*n:                      \n            if f == 1:                \n                m += 1\n                array[i][j] = m                \n\n            #\u8f6c\u5411\u5224\u65ad            \n            f = 0\n            #\u6c34\u5e73\u4e0a\n            if k == 1:\n                if j < hr - 1:\n                    j += 1                                        \n                    f = 1\n                if j == hr -1:\n                    vt += 1\n                    k = 2\n                    continue\n            #\u5782\u76f4\u53f3\n            if k == 2:\n                if i < vb - 1:\n                    i += 1                    \n                    f = 1\n                if i == vb -1:\n                    hr -= 1\n                    k = 3\n                    continue\n            #\u6c34\u5e73\u4e0b\n            if k == 3:\n                if j > hl + 1:\n                    j -= 1    \n                    f = 1\n                if j == hl +1:\n                    vb -= 1\n                    k = 4                    \n                    continue\n            #\u5782\u76f4\u5de6\n            if k== 4:\n                if i > vt + 1 :\n                    i -= 1\n                    f = 1\n                if i == vt + 1:\n                    hl += 1                \n                    k = 1\n                    continue\n                \n        return array\n')),Object(a.b)("p",null,"\u5efa\u56f4\u5899 + \u63a7\u65b9\u5411"),Object(a.b)("h4",{id:"\u5251\u6307-offer-12-\u77e9\u9635\u4e2d\u7684\u8def\u5f84---6"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/ju-zhen-zhong-de-lu-jing-lcof/"},"\u5251\u6307 Offer 12. \u77e9\u9635\u4e2d\u7684\u8def\u5f84")," - 6"),Object(a.b)("h4",{id:"\u5251\u6307-offer-13-\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4---3"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/"},"\u5251\u6307 Offer 13. \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4")," - 3"),Object(a.b)("h3",{id:"8-7-floodfill\u7b97\u6cd5\uff0c\u4e00\u7c7b\u7ecf\u5178\u95ee\u9898"},"8-7 floodfill\u7b97\u6cd5\uff0c\u4e00\u7c7b\u7ecf\u5178\u95ee\u9898"),Object(a.b)("h4",{id:"200-\u5c9b\u5c7f\u6570\u91cf-115"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/number-of-islands/"},"200. \u5c9b\u5c7f\u6570\u91cf"),"-115"),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\u5b8c\u6210\u4e00\u6b21\u63d0\u4ea4")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:    \n    int m,n;\n    vector<vector<bool>> visited;\n    int d[4][2] = {{-1,0},{0,1},{1,0},{0,-1}};\n    bool inArea(int x,int y) {\n        return x >=0 && x < m && y >=0 && y< n;\n    }\n\n    void dfs(vector<vector<char>>& grid, int x,int y) {\n        visited[x][y] = true;\n        for(int i = 0; i<4; i++) {\n            int newx = x + d[i][0];\n            int newy = y + d[i][1];\n            if(inArea(newx,newy) && !visited[newx][newy] && grid[newx][newy] == '1') {\n                dfs(grid,newx,newy);\n            }\n        }\n    }\npublic:\n    int numIslands(vector<vector<char>>& grid) {\n        m = grid.size();\n        if(m == 0) return 0;\n        n = grid[0].size();\n        visited = vector<vector<bool>>(m,vector<bool>(n,false));\n\n        int ret = 0;\n        for(int i = 0; i< m; i++){\n            for(int j = 0; j < n; j++) {\n                if(grid[i][j] == '1' && !visited[i][j]) {\n                    ret++;\n                    dfs(grid,i,j);\n                }\n            }\n        }\n        return ret;\n    }\n};\n")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/surrounded-regions/"},"130. \u88ab\u56f4\u7ed5\u7684\u533a\u57df")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/pacific-atlantic-water-flow/"},"417. \u592a\u5e73\u6d0b\u5927\u897f\u6d0b\u6c34\u6d41\u95ee\u9898")),Object(a.b)("h3",{id:"8-8-\u56de\u6eaf\u6cd5\u662f\u4eba\u5de5\u667a\u80fd\u7684\u57fa\u7840"},"8-8 \u56de\u6eaf\u6cd5\u662f\u4eba\u5de5\u667a\u80fd\u7684\u57fa\u7840"),Object(a.b)("h4",{id:"51-n-\u7687\u540e"},Object(a.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/n-queens/"},"51. N \u7687\u540e")),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!0,disabled:!0})," ","\u5b8c\u6210\u4e00\u6b21\u63d0\u4ea4")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\nprivate:\n    vector<vector<string>> ret;\npublic:\n    vector<vector<string>> solveNQueens(int n) {\n        vector<string> ans(n, string(n, '.'));\n        dfs(0,n,ans);\n        return ret;\n    }\nprivate:\n    void dfs(int row, int &n, vector<string> &ans) {\n        if(row == n) {\n            ret.push_back(ans);\n            return;\n        }\n        for(int col = 0; col < n; col++) {\n            if(isValid(row, col, n, ans)) {\n                ans[row][col] = 'Q';\n                dfs(row + 1, n, ans);\n                ans[row][col] = '.';\n            }\n        }\n    }\n\n    bool isValid(int row, int col, int &n, vector<string> &ans) {\n        //\u7ad6\u884c\n        for(int i = 0; i < row; i++) {\n            if(ans[i][col] == 'Q') {\n                return false;\n            }\n        }\n        for(int i = row-1, j = col+1; i >= 0 && j < n; i--,j++) {\n            if(ans[i][j] == 'Q') {\n                return false;\n            }\n        }        \n        for(int i = row-1, j = col-1; i >= 0 && j >= 0; i--,j--) {\n            if(ans[i][j] == 'Q') {\n                return false;\n            }\n        }\n        return true;\n    }\n};\n")),Object(a.b)("ul",{className:"contains-task-list"},Object(a.b)("li",{parentName:"ul",className:"task-list-item"},Object(a.b)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","\u5728\u7ec3\u4e00\u6b21\uff08\u4f18\u5316\u51b2\u7a81\u5224\u65ad\uff09")),Object(a.b)("p",null,Object(a.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/sudoku-solver/"},"37. \u89e3\u6570\u72ec")),Object(a.b)("h4",{id:"\u6570\u5b57\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570---\u725b\u5ba2\u7f51"},"\u6570\u5b57\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u51fa\u73b0\u7684\u6b21\u6570 - ",Object(a.b)("a",{parentName:"h4",href:"https://www.nowcoder.com/practice/70610bf967994b22bb1c26f9ae901fa2?tpId=13&tqId=11190&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking&from=cyc_github"},"\u725b\u5ba2\u7f51")),Object(a.b)("p",null,"\u5feb\u63923\u8def\u6392\u5e8f\u53ef\u5f97\u3002"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int GetNumberOfK(vector<int> data ,int k) {\n        auto p1 = partition(data.begin(), data.end(), [&k](int v){\n            return v < k;\n        });\n        auto p2 = partition(data.begin(), data.end(), [&k](int v){\n            return v <= k;\n        });\n        return p2-p1;\n        \n    }\n};\n")),Object(a.b)("p",null,"C++\u81ea\u5e26\u7684partition\u51fd\u6570.\u4e24\u6b21partition\u3002"),Object(a.b)("p",null,"\u6211\u4eec\u4e5f\u53ef\u4ee5\u76f4\u63a5\u7528",Object(a.b)("inlineCode",{parentName:"p"},"STL\u4e2d\u7684upper_bound(), lower_bound()"),"\u5e93\u51fd\u6570"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"class Solution {\npublic:\n    int GetNumberOfK(vector<int> nums ,int target) {\n        return upper_bound(nums.begin(), nums.end(), target) - lower_bound(nums.begin(), nums.end(), target);\n    }\n};\n")),Object(a.b)("h3",{id:"\u8865\u5145\u4ee3\u78011\uff1a\u66f4\u591a\u548c\u751f\u6210\u6392\u5217\u76f8\u5173-\u6574\u7406\u4e2d"},"\u8865\u5145\u4ee3\u78011\uff1a\u66f4\u591a\u548c\u751f\u6210\u6392\u5217\u76f8\u5173\t","[\u6574\u7406\u4e2d][\u656c\u8bf7\u671f\u5f85]"),Object(a.b)("p",null,"\u8865\u5145\u4ee3\u78012\uff1a\u66f4\u591a\u548c\u7ec4\u5408\u76f8\u5173\t","[\u6574\u7406\u4e2d][\u656c\u8bf7\u671f\u5f85]","\n\u8865\u5145\u4ee3\u78013\uff1a\u66f4\u591a\u548c\u516b\u7687\u540e\u95ee\u9898\u76f8\u5173\t","[\u6574\u7406\u4e2d][\u656c\u8bf7\u671f\u5f85]"),Object(a.b)("h3",{id:""}),Object(a.b)("h3",{id:"-1"}),Object(a.b)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),Object(a.b)("p",null,"\u6ce8\u610f\u5206\u6cbb\u7684\u65f6\u5019\uff0c\u62c6\u5206\u7684\u5de6\u53f3\u6bd4\u8f83\uff01"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-c++"},"        MergeSort(data, l, mid);\n        MergeSort(data, mid+1, r); //\u6ce8\u610f\u8fd9\u4e2a\u7ec6\u8282\uff01\u662fmid+1\n")))}p.isMDXComponent=!0},356:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return d}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function b(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),o=function(e){var n=i.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},p=function(e){var n=o(e.components);return i.a.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),p=o(t),m=r,d=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return t?i.a.createElement(d,c(c({ref:n},s),{},{components:t})):i.a.createElement(d,c({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=m;var c={};for(var b in n)hasOwnProperty.call(n,b)&&(c[b]=n[b]);c.originalType=e,c.mdxType="string"==typeof e?e:r,l[1]=c;for(var s=2;s<a;s++)l[s]=t[s];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);
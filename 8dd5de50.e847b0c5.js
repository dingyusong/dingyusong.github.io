(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{230:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return m}));var a=t(3),c=t(7),i=(t(0),t(356)),r=["components"],o={},l={unversionedId:"\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/02-\u67e5\u627e\u8868",id:"\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/02-\u67e5\u627e\u8868",isDocsHomePage:!1,title:"02-\u67e5\u627e\u8868",description:"\u7b2c\u56db\u7ae0\uff1a\u67e5\u627e\u8868\u76f8\u5173\u95ee\u9898",source:"@site/docs/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/02-\u67e5\u627e\u8868.md",slug:"/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/02-\u67e5\u627e\u8868",permalink:"/docs/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/02-\u67e5\u627e\u8868",editUrl:"dys-typora-open://mine/survival/docs/\u7f16\u7a0b\u57fa\u7840/\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5/\u7b97\u6cd5\u9762\u8bd5/02-\u67e5\u627e\u8868.md",version:"current"},p=[{value:"\u7b2c\u56db\u7ae0\uff1a\u67e5\u627e\u8868\u76f8\u5173\u95ee\u9898",id:"\u7b2c\u56db\u7ae0\uff1a\u67e5\u627e\u8868\u76f8\u5173\u95ee\u9898",children:[{value:"4-1 set\u7684\u4f7f\u7528 Intersection of Two Arrays",id:"4-1-set\u7684\u4f7f\u7528-intersection-of-two-arrays",children:[]},{value:"4-2 map\u7684\u4f7f\u7528 Intersection of Two Arrays II",id:"4-2-map\u7684\u4f7f\u7528-intersection-of-two-arrays-ii",children:[]},{value:"4-3 set\u548cmap\u4e0d\u540c\u5e95\u5c42\u5b9e\u73b0\u7684\u533a\u522b",id:"4-3-set\u548cmap\u4e0d\u540c\u5e95\u5c42\u5b9e\u73b0\u7684\u533a\u522b",children:[]},{value:"4-4 \u4f7f\u7528\u67e5\u627e\u8868\u7684\u7ecf\u5178\u95ee\u9898 Two Sum",id:"4-4-\u4f7f\u7528\u67e5\u627e\u8868\u7684\u7ecf\u5178\u95ee\u9898-two-sum",children:[]},{value:"4-5 \u7075\u6d3b\u9009\u62e9\u952e\u503c 4Sum II",id:"4-5-\u7075\u6d3b\u9009\u62e9\u952e\u503c-4sum-ii",children:[]},{value:"4-6 \u7075\u6d3b\u9009\u62e9\u952e\u503c Number of Boomerangs",id:"4-6-\u7075\u6d3b\u9009\u62e9\u952e\u503c-number-of-boomerangs",children:[]},{value:"4-7 \u67e5\u627e\u8868\u548c\u6ed1\u52a8\u7a97\u53e3 Contain Duplicate II",id:"4-7-\u67e5\u627e\u8868\u548c\u6ed1\u52a8\u7a97\u53e3-contain-duplicate-ii",children:[]},{value:"4-8 \u4e8c\u5206\u641c\u7d22\u6811\u5e95\u5c42\u5b9e\u73b0\u7684\u987a\u5e8f\u6027 Contain Duplicate III",id:"4-8-\u4e8c\u5206\u641c\u7d22\u6811\u5e95\u5c42\u5b9e\u73b0\u7684\u987a\u5e8f\u6027-contain-duplicate-iii",children:[]}]},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",children:[]}],s={toc:p};function m(e){var n=e.components,t=Object(c.a)(e,r);return Object(i.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"\u7b2c\u56db\u7ae0\uff1a\u67e5\u627e\u8868\u76f8\u5173\u95ee\u9898"},"\u7b2c\u56db\u7ae0\uff1a\u67e5\u627e\u8868\u76f8\u5173\u95ee\u9898"),Object(i.b)("p",null,"\u67e5\u627e"),Object(i.b)("p",null,"\u6709\u65e0\uff1aset"),Object(i.b)("p",null,"\u5bf9\u5e94\u5173\u7cfb\uff1amap"),Object(i.b)("h3",{id:"4-1-set\u7684\u4f7f\u7528-intersection-of-two-arrays"},"4-1 set\u7684\u4f7f\u7528 Intersection of Two Arrays"),Object(i.b)("h3",{id:"4-2-map\u7684\u4f7f\u7528-intersection-of-two-arrays-ii"},"4-2 map\u7684\u4f7f\u7528 Intersection of Two Arrays II"),Object(i.b)("h4",{id:"146-lru-\u7f13\u5b58\u673a\u5236"},Object(i.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/lru-cache/"},"146. LRU \u7f13\u5b58\u673a\u5236")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-c++"},"class LRUCache {\nprivate:\n    list<pair<int,int>> m_cache;//list\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u5220\u9664\u4e2d\u95f4\u8282\u70b9\uff0c\u7ed3\u5c3e\u8282\u70b9\uff0c\u5934\u7ed3\u70b9\u548c\u63d2\u5165\u5934\u5c3e\u8282\u70b9\u90fd\u662fO(1)\n    unordered_map<int,list<pair<int, int>>::iterator> m_map;    //\u6ce8\u610fm_map\u5b58\u7684\u662f\u4e00\u4e2a\u6307\u9488\n    int m_capacity;\npublic:\n    LRUCache(int capacity):m_capacity(capacity) {\n    }\n    \n    //O(1)\n    int get(int key) {\n        //\u67e5\u627e\u4e0d\u719f\n        if(m_map.find(key) == m_map.end()) return -1;\n        auto key_value = *m_map[key];//\u62ff\u5230\u4e00\u4e2apair\n        m_cache.erase(m_map[key]);\n        m_cache.push_front(key_value);\n        m_map[key] = m_cache.begin();\n        return key_value.second;\n    }\n    //O(1)\n    void put(int key, int value) {\n        /*\n            if(\u5982\u679c\u6ca1\u6709\u627e\u5230){                \n                if(\u5982\u679c\u5bb9\u91cf\u5df2\u7ecf\u6ee1\u4e86){\n                    \u5220\u6389cache\u5c3e\u90e8\n                }                \n            }\n            else {\n                \u5220\u9664cache\u91cc\u7684old\n            }\n            \u6dfb\u52a0\u5230cache\u5934\n            \u66f4\u65b0hash\u8868\n        */\n        // pair<int, int> node(key,value);\n        if(m_map.find(key) == m_map.end()) {\n            if(m_cache.size() == m_capacity) {\n                m_map.erase(m_cache.back().first);\n                m_cache.pop_back();\n            }            \n        }\n        else {\n            auto key_value = m_map[key];\n            m_cache.erase(key_value);\n        }\n        //\u6ce8\u610fpair\u53ef\u4ee5\u8fd9\u6837\u5199\n        // m_cache.push_front(node);\n        // m_map[key] = node;\n\n        m_cache.push_front({key, value});\n        m_map[key] = m_cache.begin();\n    }\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache* obj = new LRUCache(capacity);\n * int param_1 = obj->get(key);\n * obj->put(key,value);\n */\n")),Object(i.b)("p",null,"\u6ce8\u610f\uff1a\u8fd9\u4e2a\u7f16\u8bd1\u5668\u80fd\u8fc7\uff0cleecode\u4e0d\u80fd\u8fc7\uff01"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-c++"},"class LRUCache {\nprivate:\n    //\u6ce8\u610fpair\u7684\u8fd9\u4e2akey\u540c\u65f6\u4e5f\u662fhash\u7684key\n    list<pair<int ,int >> m_cache;\n    unordered_map<int ,list<pair<int,int>>::iterator> m_hash;\n    int m_capacity;\npublic:\n    LRUCache(int capacity):m_capacity(capacity) {\n    }\n    \n    int get(int key) {\n        auto it = m_hash.find(key);        \n        //1. \u6ca1\u627e\u5230\n        if(it == m_hash.end()) return -1;\n\n        //2. \u66f4\u65b0cache\n        m_cache.erase(it->second);\n        m_cache.push_front(*(it->second));      \n        //3. \u66f4\u65b0hash\n        m_hash[key] = m_cache.begin();\n        //4. \u8fd4\u56de\u503c\n        return it->second->second;\n    }\n    \n    void put(int key, int value) {\n        auto it = m_hash.find(key);\n\n        //\u6ca1\u627e\u5230\n        if(it == m_hash.end()) {\n            //\u90a3\u5c31\u9700\u8981\u6dfb\u52a0\u4e86(\u6dfb\u52a0\u7684\u65f6\u5019\u9700\u8981\u5224\u65ad\u5bb9\u91cf\u662f\u5426\u5df2\u6ee1\uff0c\u5982\u679c\u6ee1\u4e86\u5c31\u9700\u8981\u5220\u9664)\n            if(m_cache.size() == m_capacity) {\n                //\u5220\u9664hash\n                m_hash.erase(m_cache.back().first);\n                //\u5220\u9664cache\n                m_cache.pop_back();\n            }\n        }\n        else {\n            m_cache.erase(it->second);\n        }\n\n        //\u66f4\u65b0cache\n        m_cache.push_front({key,value});\n        //\u66f4\u65b0hash\n        m_hash[key] = m_cache.begin();\n    }\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache* obj = new LRUCache(capacity);\n * int param_1 = obj->get(key);\n * obj->put(key,value);\n */\n")),Object(i.b)("p",null,"hash-list"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-c++"},"class LRUCache {\nprivate:\n    list<pair<int,int>> m_cache;//list\u662f\u4e00\u4e2a\u53cc\u5411\u94fe\u8868\uff0c\u5220\u9664\u4e2d\u95f4\u8282\u70b9\uff0c\u7ed3\u5c3e\u8282\u70b9\uff0c\u5934\u7ed3\u70b9\u548c\u63d2\u5165\u5934\u5c3e\u8282\u70b9\u90fd\u662fO(1)\n    unordered_map<int,list<pair<int, int>>::iterator> m_map;    //\u6ce8\u610fm_map\u5b58\u7684\u662f\u4e00\u4e2a\u6307\u9488\n    int m_capacity;\npublic:\n    LRUCache(int capacity):m_capacity(capacity) {\n    }\n    \n    //O(1)\n    int get(int key) {\n        //\u67e5\u627e\u4e0d\u719f\n        if(m_map.find(key) == m_map.end()) return -1;\n        auto key_value = *m_map[key];//\u62ff\u5230\u4e00\u4e2apair\n        m_cache.erase(m_map[key]);\n        m_cache.push_front(key_value);\n        m_map[key] = m_cache.begin();\n        return key_value.second;\n    }\n    //O(1)\n    void put(int key, int value) {\n        /*\n            if(\u5982\u679c\u6ca1\u6709\u627e\u5230){                \n                if(\u5982\u679c\u5bb9\u91cf\u5df2\u7ecf\u6ee1\u4e86){\n                    \u5220\u6389cache\u5c3e\u90e8\n                }                \n            }\n            else {\n                \u5220\u9664cache\u91cc\u7684old\n            }\n            \u6dfb\u52a0\u5230cache\u5934\n            \u66f4\u65b0hash\u8868\n        */\n        // pair<int, int> node(key,value);\n        if(m_map.find(key) == m_map.end()) {\n            if(m_cache.size() == m_capacity) {\n                m_map.erase(m_cache.back().first);\n                m_cache.pop_back();\n            }            \n        }\n        else {\n            auto key_value = m_map[key];\n            m_cache.erase(key_value);\n        }\n        //\u6ce8\u610fpair\u53ef\u4ee5\u8fd9\u6837\u5199\n        // m_cache.push_front(node);\n        // m_map[key] = node;\n\n        m_cache.push_front({key, value});\n        m_map[key] = m_cache.begin();\n    }\n};\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache* obj = new LRUCache(capacity);\n * int param_1 = obj->get(key);\n * obj->put(key,value);\n */\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'class LRUCache:\n\n    def __init__(self, capacity):\n        """\n        :type capacity: int\n        """\n        self.cache = {}#\u4fdd\u5b58key-value\u503c\n        self.keys = []#\u4fdd\u6301key\u7684\u4f4d\u7f6e\n        self.capacity = capacity\n\n    def get(self, key):\n        """\n        :type key: int\n        :rtype: int\n        """\n        #\u5982\u679c\u5b58\u5728\n        if key in self.cache:\n            if key != self.keys[-1]:\n                #\u5c06key\u79fb\u5230\u6808\u9876\n                self.keys.remove(key)\n                self.keys.append(key)\n                #\u8fd4\u56devalue\u503c\n            return self.cache[key]\n        else:#\u5982\u679c\u4e0d\u5b58\u5728\u8fd4\u56de-1\n            return -1\n\n    def put(self, key, value):\n        """\n        :type key: int\n        :type value: int\n        :rtype: void\n        """\n        if key in self.cache:#\u5b58\u5728\n            #\u79fb\u9664key\n            self.keys.remove(key)\n        elif len(self.keys) == self.capacity:#\u4e0d\u5b58\u5728\u4e14\u5df2\u7ecf\u6ee1\u4e86\n            #\u79fb\u9664\u6700\u8fd1\u6700\u8fdc\u672a\u4f7f\u7528\n            old = self.keys.pop(0)\n            self.cache.pop(old)\n        \n\n        #1.\u66f4\u65b0\u4f4d\u7f6e\n        self.keys.append(key)\n        #2.\u66f4\u65b0\u503c\n        self.cache[key] = value\n            \n        \n\n\n# Your LRUCache object will be instantiated and called as such:\n# obj = LRUCache(capacity)\n# param_1 = obj.get(key)\n# obj.put(key,value)\n')),Object(i.b)("h4",{id:"1-\u4e24\u6570\u4e4b\u548c"},Object(i.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/two-sum/"},"1. \u4e24\u6570\u4e4b\u548c")),Object(i.b)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u76ee\u6807\u503c target\uff0c\u8bf7\u4f60\u5728\u8be5\u6570\u7ec4\u4e2d\u627e\u51fa\u548c\u4e3a\u76ee\u6807\u503c\u7684\u90a3 \u4e24\u4e2a \u6574\u6570\uff0c\u5e76\u8fd4\u56de\u4ed6\u4eec\u7684\u6570\u7ec4\u4e0b\u6807\u3002"),Object(i.b)("p",null,"\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u79cd\u8f93\u5165\u53ea\u4f1a\u5bf9\u5e94\u4e00\u4e2a\u7b54\u6848\u3002\u4f46\u662f\uff0c\u6570\u7ec4\u4e2d\u540c\u4e00\u4e2a\u5143\u7d20\u4e0d\u80fd\u4f7f\u7528\u4e24\u904d\u3002"),Object(i.b)("p",null,"\u793a\u4f8b:"),Object(i.b)("p",null,"\u7ed9\u5b9a nums = ","[2, 7, 11, 15]",", target = 9"),Object(i.b)("p",null,"\u56e0\u4e3a nums","[0]"," + nums","[1]"," = 2 + 7 = 9\n\u6240\u4ee5\u8fd4\u56de ","[0, 1]"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n     for(int i=0; i<nums.size(); i++) {\n         int numberA = nums[i];\n         for (int j=i+1; j<nums.size(); j++){\n             int numberB = nums[j];\n             int total = numberA+numberB;\n             if(target == total){\n                 vector<int> result;\n                 result.push_back(i);\n                 result.push_back(j);\n                 return result;\n             }\n         }\n     }  \n    }\n};\n")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"\u590d\u6742\u5ea6\u5206\u6790\uff1a\n\n\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2)\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u8bd5\u56fe\u901a\u8fc7\u904d\u5386\u6570\u7ec4\u7684\u5176\u4f59\u90e8\u5206\u6765\u5bfb\u627e\u5b83\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u5143\u7d20\uff0c\u8fd9\u5c06\u8017\u8d39 O(n)O(n) \u7684\u65f6\u95f4\u3002\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2)\u3002\n\n\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(1)\u3002\n")),Object(i.b)("p",null,"\u65b9\u6cd5\u4e8c\uff1a\u4e24\u904d\u54c8\u5e0c\u8868\n\u4e3a\u4e86\u5bf9\u8fd0\u884c\u65f6\u95f4\u590d\u6742\u5ea6\u8fdb\u884c\u4f18\u5316\uff0c\u6211\u4eec\u9700\u8981\u4e00\u79cd\u66f4\u6709\u6548\u7684\u65b9\u6cd5\u6765\u68c0\u67e5\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u76ee\u6807\u5143\u7d20\u3002\u5982\u679c\u5b58\u5728\uff0c\u6211\u4eec\u9700\u8981\u627e\u51fa\u5b83\u7684\u7d22\u5f15\u3002\u4fdd\u6301\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4e0e\u5176\u7d22\u5f15\u76f8\u4e92\u5bf9\u5e94\u7684\u6700\u597d\u65b9\u6cd5\u662f\u4ec0\u4e48\uff1f\u54c8\u5e0c\u8868\u3002"),Object(i.b)("p",null,"\u901a\u8fc7\u4ee5\u7a7a\u95f4\u6362\u53d6\u901f\u5ea6\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u67e5\u627e\u65f6\u95f4\u4ece O(n)O(n) \u964d\u4f4e\u5230 O(1)O(1)\u3002\u54c8\u5e0c\u8868\u6b63\u662f\u4e3a\u6b64\u76ee\u7684\u800c\u6784\u5efa\u7684\uff0c\u5b83\u652f\u6301\u4ee5 \u8fd1\u4f3c \u6052\u5b9a\u7684\u65f6\u95f4\u8fdb\u884c\u5feb\u901f\u67e5\u627e\u3002\u6211\u7528\u201c\u8fd1\u4f3c\u201d\u6765\u63cf\u8ff0\uff0c\u662f\u56e0\u4e3a\u4e00\u65e6\u51fa\u73b0\u51b2\u7a81\uff0c\u67e5\u627e\u7528\u65f6\u53ef\u80fd\u4f1a\u9000\u5316\u5230 O(n)O(n)\u3002\u4f46\u53ea\u8981\u4f60\u4ed4\u7ec6\u5730\u6311\u9009\u54c8\u5e0c\u51fd\u6570\uff0c\u5728\u54c8\u5e0c\u8868\u4e2d\u8fdb\u884c\u67e5\u627e\u7684\u7528\u65f6\u5e94\u5f53\u88ab\u644a\u9500\u4e3a O(1)O(1)\u3002"),Object(i.b)("p",null,"\u4e00\u4e2a\u7b80\u5355\u7684\u5b9e\u73b0\u4f7f\u7528\u4e86\u4e24\u6b21\u8fed\u4ee3\u3002\u5728\u7b2c\u4e00\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u5c06\u6bcf\u4e2a\u5143\u7d20\u7684\u503c\u548c\u5b83\u7684\u7d22\u5f15\u6dfb\u52a0\u5230\u8868\u4e2d\u3002\u7136\u540e\uff0c\u5728\u7b2c\u4e8c\u6b21\u8fed\u4ee3\u4e2d\uff0c\u6211\u4eec\u5c06\u68c0\u67e5\u6bcf\u4e2a\u5143\u7d20\u6240\u5bf9\u5e94\u7684\u76ee\u6807\u5143\u7d20\uff08target - nums","[i]","target\u2212nums","[i]","\uff09\u662f\u5426\u5b58\u5728\u4e8e\u8868\u4e2d\u3002\u6ce8\u610f\uff0c\u8be5\u76ee\u6807\u5143\u7d20\u4e0d\u80fd\u662f nums","[i]","nums","[i]"," \u672c\u8eab\uff01"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < nums.length; i++) {\n            map.put(nums[i], i);\n        }\n        for (int i = 0; i < nums.length; i++) {\n            int complement = target - nums[i];\n            if (map.containsKey(complement) && map.get(complement) != i) {\n                return new int[] { i, map.get(complement) };\n            }\n        }\n        throw new IllegalArgumentException("No two sum solution");\n    }\n}\n\n')),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'class Solution:\n    def twoSum(self, nums, target):\n        """\n        :type nums: List[int]\n        :type target: int\n        :rtype: List[int]\n        """\n        #hash\u8868\u904d\u5386\n        dict = {}\n        for i in range(len(nums)):\n            complement = target - nums[i]\n            if complement in dict:\n                return [dict[complement],i]\n            dict[nums[i]] = i\n        \n')),Object(i.b)("h4",{id:"169-\u591a\u6570\u5143\u7d20"},Object(i.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/majority-element/"},"169. \u591a\u6570\u5143\u7d20")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def majorityElement(self, nums):\n        """\n        :type nums: List[int]\n        :rtype: int\n        """\n        #\u65e2\u7136\u8d85\u8fc7\u4e00\u534a\uff0c\u90a3\u8ba1\u6570\u5668\u80af\u5b9a\u662f\u4e0d\u4f1a\u5f52\u96f6\u7684\uff0c\u5176\u4ed6\u7684\u6570\u52a0\u8d77\u6765\u4e5f\u6d88\u9664\u4e0d\u8fc7\u4ed6\uff0c\u6700\u591a\u6d88\u6389\u5269\u4f591\u4e2a\n        count = 0\n        maxNum = nums[0]\n        for i in range(len(nums)):\n            if maxNum == nums[i]:\n                count += 1\n            else:\n                count -= 1\n                if count == 0:\n                    maxNum = nums[i+1]\n        \n        return maxNum\n')),Object(i.b)("h3",{id:"4-3-set\u548cmap\u4e0d\u540c\u5e95\u5c42\u5b9e\u73b0\u7684\u533a\u522b"},"4-3 set\u548cmap\u4e0d\u540c\u5e95\u5c42\u5b9e\u73b0\u7684\u533a\u522b"),Object(i.b)("h3",{id:"4-4-\u4f7f\u7528\u67e5\u627e\u8868\u7684\u7ecf\u5178\u95ee\u9898-two-sum"},"4-4 \u4f7f\u7528\u67e5\u627e\u8868\u7684\u7ecf\u5178\u95ee\u9898 Two Sum"),Object(i.b)("h3",{id:"4-5-\u7075\u6d3b\u9009\u62e9\u952e\u503c-4sum-ii"},"4-5 \u7075\u6d3b\u9009\u62e9\u952e\u503c 4Sum II"),Object(i.b)("h3",{id:"4-6-\u7075\u6d3b\u9009\u62e9\u952e\u503c-number-of-boomerangs"},"4-6 \u7075\u6d3b\u9009\u62e9\u952e\u503c Number of Boomerangs"),Object(i.b)("h3",{id:"4-7-\u67e5\u627e\u8868\u548c\u6ed1\u52a8\u7a97\u53e3-contain-duplicate-ii"},"4-7 \u67e5\u627e\u8868\u548c\u6ed1\u52a8\u7a97\u53e3 Contain Duplicate II"),Object(i.b)("h3",{id:"4-8-\u4e8c\u5206\u641c\u7d22\u6811\u5e95\u5c42\u5b9e\u73b0\u7684\u987a\u5e8f\u6027-contain-duplicate-iii"},"4-8 \u4e8c\u5206\u641c\u7d22\u6811\u5e95\u5c42\u5b9e\u73b0\u7684\u987a\u5e8f\u6027 Contain Duplicate III"),Object(i.b)("p",null,"\u8865\u5145\u4ee3\u78011\uff1a\u57fa\u4e8e\u94fe\u8868\u548c\u4e8c\u5206\u641c\u7d22\u6811\u5b9e\u73b0\u7684set\u548cmap\t\u73a9\u8f6c\u6570\u636e\u7ed3\u6784\t\u7b2c\u4e03\u7ae0\n\u8865\u5145\u4ee3\u78012: \u57fa\u4e8eAVL\u6811\u5b9e\u73b0\u7684set\u548cmap\t\u73a9\u8f6c\u6570\u636e\u7ed3\u6784\t\u7b2c\u5341\u4e8c\u7ae0\n\u8865\u5145\u4ee3\u78013: \u57fa\u4e8e\u7ea2\u9ed1\u6811\u5b9e\u73b0\u7684set\u548cmap\t\u73a9\u8f6c\u6570\u636e\u7ed3\u6784\t\u7b2c\u5341\u4e09\u7ae0\n\u8865\u5145\u4ee3\u78012: \u57fa\u4e8e\u54c8\u5e0c\u8868\u5b9e\u73b0\u7684set\u548cmap\t\u73a9\u8f6c\u6570\u636e\u7ed3\u6784\t","[\u7b2c\u5341\u56db\u7ae0]"),Object(i.b)("h4",{id:"\u5251\u6307-offer-61-\u6251\u514b\u724c\u4e2d\u7684\u987a\u5b50---15"},Object(i.b)("a",{parentName:"h4",href:"https://leetcode-cn.com/problems/bu-ke-pai-zhong-de-shun-zi-lcof/"},"\u5251\u6307 Offer 61. \u6251\u514b\u724c\u4e2d\u7684\u987a\u5b50")," - 15"),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/bu-ke-pai-zhong-de-shun-zi-lcof/solution/mian-shi-ti-61-bu-ke-pai-zhong-de-shun-zi-ji-he-se/"},"https://leetcode-cn.com/problems/bu-ke-pai-zhong-de-shun-zi-lcof/solution/mian-shi-ti-61-bu-ke-pai-zhong-de-shun-zi-ji-he-se/")),Object(i.b)("p",null,"max-min < 5"),Object(i.b)("h2",{id:"\u603b\u7ed3"},"\u603b\u7ed3"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"\u5982\u679c\u662f",Object(i.b)("strong",{parentName:"li"},"\u7edf\u8ba1\u5b57\u7b26"),"\u7684\u8bdd\uff0c\u4f7f\u7528\u7a7a\u95f4\u5927\u5c0f\u4e3a128\u7684\u6574\u5f62\u6570\u7ec4\u53ef\u4ee5\u66ff\u4ee3hash\u8868\uff0c\u6548\u7387\u66f4\u9ad8\u3002\u4f8b\u5982\uff1a50. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26\u4f4d\u7f6e\u3002")))}m.isMDXComponent=!0},356:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return h}));var a=t(0),c=t.n(a);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,c=function(e,n){if(null==e)return{};var t,a,c={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var p=c.a.createContext({}),s=function(e){var n=c.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=s(e.components);return c.a.createElement(p.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},b=c.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,r=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=s(t),b=a,h=m["".concat(r,".").concat(b)]||m[b]||u[b]||i;return t?c.a.createElement(h,o(o({ref:n},p),{},{components:t})):c.a.createElement(h,o({ref:n},p))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,r=new Array(i);r[0]=b;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,r[1]=o;for(var p=2;p<i;p++)r[p]=t[p];return c.a.createElement.apply(null,r)}return c.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);
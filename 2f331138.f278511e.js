(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{132:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return m}));var a=t(3),c=t(7),r=(t(0),t(356)),i=["components"],o={},l={unversionedId:"\u7f16\u7a0b\u8bed\u8a00/CPP/C++\u5305\u7ba1\u7406",id:"\u7f16\u7a0b\u8bed\u8a00/CPP/C++\u5305\u7ba1\u7406",isDocsHomePage:!1,title:"C++\u5305\u7ba1\u7406",description:"\u5305\u7ba1\u7406",source:"@site/docs/\u7f16\u7a0b\u8bed\u8a00/CPP/C++\u5305\u7ba1\u7406.md",slug:"/\u7f16\u7a0b\u8bed\u8a00/CPP/C++\u5305\u7ba1\u7406",permalink:"/docs/\u7f16\u7a0b\u8bed\u8a00/CPP/C++\u5305\u7ba1\u7406",editUrl:"dys-typora-open://mine/survival/docs/\u7f16\u7a0b\u8bed\u8a00/CPP/C++\u5305\u7ba1\u7406.md",version:"current"},s=[{value:"vcpkg",id:"vcpkg",children:[{value:"toolchain",id:"toolchain",children:[]},{value:"\u6307\u5b9a\u7f16\u8bd1\u67d0\u79cd\u67b6\u6784\u7684\u7a0b\u5e8f\u5e93",id:"\u6307\u5b9a\u7f16\u8bd1\u67d0\u79cd\u67b6\u6784\u7684\u7a0b\u5e8f\u5e93",children:[]}]},{value:"\u4ea4\u53c9\u7f16\u8bd1",id:"\u4ea4\u53c9\u7f16\u8bd1",children:[{value:"triplets",id:"triplets",children:[]},{value:"VCPKG_CHAINLOAD_TOOLCHAIN_FILE",id:"vcpkg_chainload_toolchain_file",children:[]},{value:"\u79fb\u9664\u67d0\u4e2a\u5e93",id:"\u79fb\u9664\u67d0\u4e2a\u5e93",children:[]}]},{value:"\u53c2\u8003\u6587\u6863",id:"\u53c2\u8003\u6587\u6863",children:[]}],p={toc:s};function m(e){var n=e.components,t=Object(c.a)(e,i);return Object(r.b)("wrapper",Object(a.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("h1",{id:"\u5305\u7ba1\u7406"},"\u5305\u7ba1\u7406"),Object(r.b)("h2",{id:"vcpkg"},"vcpkg"),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://vcpkg.readthedocs.io/en/latest/users/triplets/"},"https://vcpkg.readthedocs.io/en/latest/users/triplets/")),Object(r.b)("h3",{id:"toolchain"},"toolchain"),Object(r.b)("p",null,"VCPKG_CHAINLOAD_TOOLCHAIN_FILE"),Object(r.b)("p",null,"Specifies an alternate CMake Toolchain file to use."),Object(r.b)("p",null,"This (if set) will override all other compiler detection logic. By default, a toolchain file is selected from ",Object(r.b)("inlineCode",{parentName:"p"},"scripts/toolchains/")," appropriate to the platform."),Object(r.b)("p",null,"See also the CMake documentation for toolchain files: ",Object(r.b)("a",{parentName:"p",href:"https://cmake.org/cmake/help/v3.11/manual/cmake-toolchains.7.html"},"https://cmake.org/cmake/help/v3.11/manual/cmake-toolchains.7.html"),"."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},'cmake ${LOGAN_SRC_DIR} -G Xcode -DCMAKE_TOOLCHAIN_FILE="${SCRIPT_DIR}/src/LoganCore/Deps/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$SCRIPT_DIR/ios.toolchain.cmake -DPLATFORM=OS64\n')),Object(r.b)("h3",{id:"\u6307\u5b9a\u7f16\u8bd1\u67d0\u79cd\u67b6\u6784\u7684\u7a0b\u5e8f\u5e93"},"\u6307\u5b9a\u7f16\u8bd1\u67d0\u79cd\u67b6\u6784\u7684\u7a0b\u5e8f\u5e93"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"\u279c  vcpkg git:(master) ./vcpkg help triplet  \nAvailable architecture triplets\nVCPKG built-in triplets:\n  x64-linux\n  x64-windows\n  x64-windows-static\n  x86-windows\n  arm64-windows\n  x64-uwp\n  x64-osx\n  arm-uwp\n\nVCPKG community triplets:\n  wasm32-emscripten\n  ppc64le-linux\n  x86-mingw-static\n  arm64-ios\n  x64-mingw-dynamic\n  x86-freebsd\n  armv6-android\n  x64-android\n  x86-windows-static\n  arm-android\n  arm64-mingw-dynamic\n  arm64-osx\n  arm64-windows-static\n  arm-linux\n  arm-windows\n  arm64-uwp\n  x86-mingw-dynamic\n  s390x-linux\n  x64-openbsd\n  arm-mingw-dynamic\n  arm-neon-android\n  x64-ios\n  x64-mingw-static\n  arm-ios\n  x64-osx-dynamic\n  x86-android\n  x86-uwp\n  arm64-linux\n  x64-freebsd\n  arm64-windows-static-md\n  arm64-mingw-static\n  x86-windows-static-md\n  arm-mingw-static\n  arm64-osx-dynamic\n  x86-ios\n  x64-windows-static-md\n  arm64-android\n  arm-windows-static\n  x86-windows-v120\n\u279c  vcpkg git:(master) \n")),Object(r.b)("h2",{id:"\u4ea4\u53c9\u7f16\u8bd1"},"\u4ea4\u53c9\u7f16\u8bd1"),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://github.com/microsoft/vcpkg/commit/c5f01e1dee0d41b8014ac6f1eeafda974917ba17"},"https://github.com/microsoft/vcpkg/commit/c5f01e1dee0d41b8014ac6f1eeafda974917ba17")),Object(r.b)("h3",{id:"triplets"},"triplets"),Object(r.b)("p",null,"\u5982\u679c\u8981\u4f7f\u7528\u4ea4\u53c9\u7f16\u8bd1\uff1a\u9700\u8981\u6307\u5b9a\u5bf9\u5e94\u7684triplet,\u4e5f\u5c31\u662f\u5b9a\u4e49 VCPKG_TARGET_TRIPLET \u8fd9\u4e2a\u53d8\u91cf"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},'# \u751f\u6210xcode\u5de5\u7a0b\n# \u53c2\u8003 https://github.com/leetal/ios-cmake\ncmake ${LOGAN_SRC_DIR} -G Xcode \\\n-DCMAKE_TOOLCHAIN_FILE="${SCRIPT_DIR}/src/LoganCore/Deps/vcpkg/scripts/buildsystems/vcpkg.cmake" \\\n-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$SCRIPT_DIR/ios.toolchain.cmake \\\n-DPLATFORM=${PLATFORM} \\\n-DVCPKG_TARGET_TRIPLET=${TRIPLET}\n')),Object(r.b)("p",null,"\u8fd9\u4e2a\u53d8\u91cf\u7684\u503c\u5217\u8868\u5982\u4e0b\uff1a"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"./vcpkg help triplet  \n")),Object(r.b)("p",null,"\u76f8\u5173\u8bbe\u7f6e\u4fe1\u606f\u5728\u8fd9\u91cc\uff1a",Object(r.b)("a",{parentName:"p",href:"https://vcpkg.readthedocs.io/en/latest/users/triplets/"},"https://vcpkg.readthedocs.io/en/latest/users/triplets/")),Object(r.b)("p",null,"iOS\uff1a"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"arm64-ios: arm64 \u67b6\u6784")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"arm-ios\uff1aarmv7\u67b6\u6784")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"x64-ios\uff1a\u6a21\u62df\u5668"))),Object(r.b)("p",null,"mac\uff1a"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"arm64-osx: arm64 \u67b6\u6784mac\uff0cm1\u673a\u5668")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("p",{parentName:"li"},"x64-osx: intel\u673a\u5668\u3002"))),Object(r.b)("h3",{id:"vcpkg_chainload_toolchain_file"},"VCPKG_CHAINLOAD_TOOLCHAIN_FILE"),Object(r.b)("p",null,"Specifies an alternate CMake Toolchain file to use."),Object(r.b)("p",null,"This (if set) will override all other compiler detection logic. By default, a toolchain file is selected from ",Object(r.b)("inlineCode",{parentName:"p"},"scripts/toolchains/")," appropriate to the platform."),Object(r.b)("p",null,"See also the CMake documentation for toolchain files: ",Object(r.b)("a",{parentName:"p",href:"https://cmake.org/cmake/help/v3.11/manual/cmake-toolchains.7.html"},"https://cmake.org/cmake/help/v3.11/manual/cmake-toolchains.7.html"),"."),Object(r.b)("p",null,"\u4ea4\u53c9\u7f16\u8bd1\u7684toolchain file"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},'#!/bin/sh\nSCRIPT_DIR="$(\n    cd "$(dirname "$0")"\n    pwd\n)"\n\necho "++++++++++++++++++++++++++\u5f00\u59cb\u914d\u7f6e\u73af\u5883++++++++++++++++++++++++++++++++"\necho "======================\u8fdb\u5165Deps\u76ee\u5f55==========================="\ncd ${SCRIPT_DIR}/Deps\necho "======================\u62c9\u53d6\u5b50\u4ed3\u5e93\u4ed3\u5e93=========================="\ngit submodule update --init --recursive\n\nif [[ ! -d "vcpkg" ]]; then\n    echo "======================\u6b63\u5728\u5b89\u88c5vcpkg=========================="\n    git clone https://github.com/microsoft/vcpkg    \n    ./vcpkg/bootstrap-vcpkg.sh    \n    echo "set(VCPKG_OSX_DEPLOYMENT_TARGET 9.0)" >> ${SCRIPT_DIR}/Deps/vcpkg/triplets/community/arm64-ios.cmake\n    echo "set(VCPKG_OSX_DEPLOYMENT_TARGET 9.0)" >> ${SCRIPT_DIR}/Deps/vcpkg/triplets/community/arm-ios.cmake\n    echo "set(VCPKG_OSX_DEPLOYMENT_TARGET 9.0)" >> ${SCRIPT_DIR}/Deps/vcpkg/triplets/community/x86-ios.cmake\n    echo "set(VCPKG_OSX_DEPLOYMENT_TARGET 9.0)" >> ${SCRIPT_DIR}/Deps/vcpkg/triplets/community/x64-ios.cmake\nfi\n\ncd vcpkg\n\necho "======================\u5b89\u88c5curl openssl zlib\u5e93============================="\n\n./vcpkg install curl:arm64-ios  openssl:arm64-ios   zlib:arm64-ios\n./vcpkg install curl:arm-ios    openssl:arm-ios     zlib:arm-ios\n./vcpkg install curl:x64-ios    openssl:x64-ios     zlib:x64-ios\n./vcpkg install curl:x64-osx    openssl:x64-osx     zlib:x64-osx\n./vcpkg install curl:arm64-osx  openssl:arm64-osx   zlib:arm64-osx\n')),Object(r.b)("p",null,"VCPKG_OSX_DEPLOYMENT_TARGET"),Object(r.b)("p",null,"\u8bbe\u7f6eiOS\u7684\u6700\u4f4e\u652f\u6301\u7248\u672c\uff1a"),Object(r.b)("h3",{id:"\u79fb\u9664\u67d0\u4e2a\u5e93"},"\u79fb\u9664\u67d0\u4e2a\u5e93"),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"./vcpkg --help")," \u89e3\u9501\u5404\u79cd\u7528\u6cd5"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"\u279c  vcpkg git:(master) \u2717 ./vcpkg remove curl:x64-osx    openssl:x64-osx     zlib:x64-osx\nThe following packages will be removed:\n    curl:x64-osx\n    openssl:x64-osx\n    zlib:x64-osx\nRemoving package curl:x64-osx...\nRemoving package openssl:x64-osx...\nRemoving package zlib:x64-osx...\n\u279c  vcpkg git:(master) \u2717 ./vcpkg remove curl:arm64-osx  openssl:arm64-osx   zlib:arm64-osx\nThe following packages will be removed:\n    curl:arm64-osx\n    openssl:arm64-osx\n    zlib:arm64-osx\nRemoving package curl:arm64-osx...\nRemoving package openssl:arm64-osx...\nRemoving package zlib:arm64-osx...\n\u279c  vcpkg git:(master) \u2717 \n")),Object(r.b)("h2",{id:"\u53c2\u8003\u6587\u6863"},"\u53c2\u8003\u6587\u6863"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",{parentName:"li",href:"https://www.cnblogs.com/linuxAndMcu/p/14696542.html"},"C++\u5f00\u6e90\u5e93 - \u5305\u7ba1\u7406\u5de5\u5177Vcpkg\u5b89\u88c5\u4f7f\u7528\u6559\u7a0b"))))}m.isMDXComponent=!0},356:function(e,n,t){"use strict";t.d(n,"a",(function(){return m})),t.d(n,"b",(function(){return d}));var a=t(0),c=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,c=function(e,n){if(null==e)return{};var t,a,c={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(c[t]=e[t]);return c}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(c[t]=e[t])}return c}var s=c.a.createContext({}),p=function(e){var n=c.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=p(e.components);return c.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return c.a.createElement(c.a.Fragment,{},n)}},u=c.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=p(t),u=a,d=m["".concat(i,".").concat(u)]||m[u]||b[u]||r;return t?c.a.createElement(d,o(o({ref:n},s),{},{components:t})):c.a.createElement(d,o({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,i=new Array(r);i[0]=u;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var s=2;s<r;s++)i[s]=t[s];return c.a.createElement.apply(null,i)}return c.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);